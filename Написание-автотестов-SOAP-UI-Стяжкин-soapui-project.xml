<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="52affc50-9342-408d-bcf9-9212ca4c10e7" activeEnvironment="Default" name="ЕМИАС.ИНФО Сервисы Написание автотестов SOAP UI Стяжкин" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="c6c9116d-1e1c-4d70-b42c-bf7a3cc2db79" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://application-emiasinfo1.dev-emias.emias.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#EndPoint_dev2}</con:endpoint><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint></con:endpoints><con:resource name="" path="" id="dba134f7-41ba-4c1a-8e5e-d104d787cbf0"><con:settings/><con:parameters/><con:method name="1" id="dd171127-8282-45b0-9852-63f0172741b0" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="86da5f6c-9c2e-4dd3-b469-7d8e38709b2f" mediaType="application/json"><con:settings/><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="getSpecialitiesInfo" path="/api/v6/saOrchestrator/getSpecialitiesInfo" id="42d98faf-e60d-4b9c-86fb-ab60690e3e27"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="26b1cd4a-0a3e-4e65-b30c-3d272a36aaf9" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 401</con:status><con:params/><con:element xmlns:get="http://application-emiasinfo1.dev-emias.emias.ru/api/v6/saOrchestrator/getSpecialitiesInfo">get:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="65995e3c-4c6b-49f0-8ba1-88dbb5f9db3c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "birthDate": "${#TestSuite#birthDate1}",
  "omsNumber": "${#TestSuite#oms1}",
  "isChatBotEnabled": false
}</con:request><con:originalUri>http://application-emiasinfo1.dev-emias.emias.ru/api/v6/saOrchestrator/getSpecialitiesInfo</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getAppointmentReceptionsByPatient" path="/api/v8/saOrchestrator/getAppointmentReceptionsByPatient" id="3b932b3c-5e15-4a79-81f8-56bc891c0b8d"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="05cbcfbd-da86-4645-829e-0e31dd6f965d" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="e48f6ccd-7d21-42fd-aadc-37a7be2d9f59" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "omsNumber": "${#TestSuite#oms1}",
  "birthDate": "${#TestSuite#birthDate1}"

  "signActiveArchive":0
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>X-Access-JWT</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getDoctorsInfo" path="/api/v4/saOrchestrator/getDoctorsInfo" id="a42f0557-6199-42ea-91f4-45ec4cc1c34b"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="8ddbf8f3-a647-41ce-9461-8dd904db8b2b" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="2ae5bddd-dae6-405b-a6fb-8ed4793e4de3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "omsNumber": "${#TestSuite#oms1}",
  "birthDate": "${#TestSuite#birthDate1}",
  "specialityId": [
    8
  ]
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="getAvailableResourceScheduleInfo" path="/api/v3/saOrchestrator/getAvailableResourceScheduleInfo" id="edf241c5-d18b-4d32-9076-78c2e859ccd1"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="ca68bcd7-9131-42c6-bbde-b6884d15750f" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="02a7f31a-7fb6-42fb-9411-eb5bc9237dd7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "availableResourceId": ${#TestCase#availableResources},
  "complexResourceId": ${#TestCase#complexResource},
  "omsNumber": "${#TestSuite#oms1}",
  "birthDate": "${#TestSuite#birthDate1}"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="createAppointment" path="/api/v3/saOrchestrator/createAppointment" id="099ecd7f-a717-4296-bf8e-9465625dd67b"><con:settings/><con:parameters/><con:method name="Method 1" id="10585bf6-de2e-4378-8a3c-005c434496d0" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:cre="http://application-emiasinfo1.dev-emias.emias.ru/api/v3/saOrchestrator/createAppointment">cre:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="c9744bb2-1fd0-48ed-b4c6-c7be7e0f139b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "omsNumber": "${#TestSuite#oms1}",
  "birthDate": "${#TestSuite#birthDate1}",
  "availableResourceId": ${#TestCase#availableResources},
  "complexResourceId": ${#TestCase#complexResource},
  "startTime": "${#TestCase#startTime}",
  "endTime": "${#TestCase#endTime}",
  "receptionTypeId":${#TestCase#receptionType}
   
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="cancelAppointment" path="/api/v3/saOrchestrator/cancelAppointment" id="ae5bad45-a3ec-4696-af67-4b939aee54e4"><con:settings/><con:parameters/><con:method name="Method 1" id="0a01cf43-274b-4bf5-bdc8-d3c3c13e8a9e" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="b3a1da00-751f-45db-bdf3-d276694f3986" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "birthDate": "${#TestSuite#birthDate1}",
  "omsNumber": "${#TestSuite#oms1}",
  "appointmentId": ${#TestSuite#Appointmentid}
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="delete" path="/api/v4/archiveAppointment/delete" id="b5725e2c-8551-4b12-8475-377b88859053"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>X-Access-JWT</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>omsNumber</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>birthDate</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Mock-sudir</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Mock-lk</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="85ffdab8-fe1c-493e-b87b-69826eb1b33c" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 500 409 403</con:status><con:params/><con:element xmlns:del="http://application-emiasinfo1.dev-emias.emias.ru/api/v4/archiveAppointment/delete">del:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="c4635db7-22d7-4963-ad34-048040fd2e10" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
 	"omsNumber": "",
 	"birthDate": "${#TestCase#bi",
 	  "pagingOptions": {
    "pageNumber": 0,
    "pageSize": 25
  }
}
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>X-Access-JWT</con:entry><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry><con:entry>appointmentId</con:entry><con:entry>Mock-sudir</con:entry><con:entry>Mock-lk</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="list" path="/api/v5/archiveAppointment/list" id="af222088-f3b0-4070-8fcb-5ad3160cb7cc"><con:settings/><con:parameters><con:parameter><con:name>EI-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Mock-sudir</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Mock-lk</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Mock-saOrchestrator</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="79eb1470-3058-47a7-b17f-d3adbb6d9dfc" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:list="http://application-eim-emiasinfo2.dev-emias.emias.ru/api/v5/archiveAppointment/list">list:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 404 401 403 400</con:status><con:params/><con:element xmlns:list="http://application-eim-emiasinfo2.dev-emias.emias.ru/api/v5/archiveAppointment/list">list:Fault</con:element></con:representation><con:request name="Request 1" id="c3016729-fb60-4a4e-97ea-2f3c1328ef40" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint_dev2}</con:endpoint><con:request>{
 	"omsNumber": "7700007178231039",
 	"birthDate": "1939-10-23",
 	  "pagingOptions": {
    "pageNumber": 0,
    "pageSize": 25
  }
}
</con:request><con:originalUri>http://application-eim-emiasinfo2.dev-emias.emias.ru/api/v5/archiveAppointment/list</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="Mock-lk" value="${#Project#mock}/mock/Styazhkin/25122027"/>
  <con:entry key="Mock-sudir" value="${#Project#mock}/mock/Styazhkin/25122027"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>Mock-sudir</con:entry><con:entry>Mock-lk</con:entry><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="tmk" path="/api/v1/status/tmk" id="171a25d3-2158-44fd-865c-78580cbcb862"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>deviceGuid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="660d6e9f-372d-433e-a456-6189b3f2d1cc" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="6f5f9524-6362-4a96-a72b-dff675e4e413" mediaType="application/json"><con:settings/><con:endpoint>${#Project#EndPoint_dev2}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry><con:entry>appointmentId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:WsdlInterface" id="bac0dbcb-e3fc-47b8-98bd-6d3a8ce4a4d9" wsaVersion="NONE" name="OrchestratorServiceBinding" type="wsdl" bindingName="{http://impl.service.soap.emias.lanit.ru/v5/}OrchestratorServiceBinding" soapVersion="1_2" anonymous="optional" definition="http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?WSDL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?WSDL"><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?WSDL</con:url><con:content><![CDATA[<wsdl:definitions name="OrchestratorService" targetNamespace="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:api="http://api.service.soap.emias.lanit.ru/v5/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="http://impl.service.soap.emias.lanit.ru/v5/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:documentation>version="1.0"</wsdl:documentation>
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema">
      <import namespace="http://api.service.soap.emias.lanit.ru/v5/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmRew.jy8zg2VZoYlH2RxaatOPM1fhErPQmzT6zR6YjTkyK7P47hHD65yXB6.hKtbj4a6os7qi_.OI8lIPWaS3sjVy2LMut0ooaVR2WledpCULhh3oGHv3Mb6SnTCkWs89lwGaPkeTLV.bQUSXwvDPjOk6rN7AJNQMiNxckpkzy1X3MkrIhdQmjyLIfcpyXa"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAppointmentReceptionsByPatient">
    <wsdl:part element="api:getAppointmentReceptionsByPatient" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointment">
    <wsdl:part element="api:cancelAppointment" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForSpecialityResponse">
    <wsdl:part element="api:getLpusForSpecialityResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLpusForSpeciality">
    <wsdl:part element="api:getLpusForSpeciality" name="getLpusForSpeciality"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfoResponse">
    <wsdl:part element="api:getAvailableResourceScheduleInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="SoapException">
    <wsdl:part element="api:soapException" name="SoapException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferralsInfo">
    <wsdl:part element="api:getReferralsInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointment">
    <wsdl:part element="api:shiftAppointment" name="shiftAppointment"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointmentResponse">
    <wsdl:part element="api:createAppointmentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLI">
    <wsdl:part element="api:getDoctorsInfoForLI" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoForLIResponse">
    <wsdl:part element="api:getDoctorsInfoForLIResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAppointment">
    <wsdl:part element="api:createAppointment" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAppointmentReceptionsByPatientResponse">
    <wsdl:part element="api:getAppointmentReceptionsByPatientResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfoResponse">
    <wsdl:part element="api:getSpecialitiesInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferralsInfoResponse">
    <wsdl:part element="api:getReferralsInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getArchivedAppointmentsResponse">
    <wsdl:part element="api:getArchivedAppointmentsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableResourceScheduleInfo">
    <wsdl:part element="api:getAvailableResourceScheduleInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="shiftAppointmentResponse">
    <wsdl:part element="api:shiftAppointmentResponse" name="shiftAppointmentResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfoResponse">
    <wsdl:part element="api:getDoctorsInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSpecialitiesInfo">
    <wsdl:part element="api:getSpecialitiesInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoctorsInfo">
    <wsdl:part element="api:getDoctorsInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfo">
    <wsdl:part element="api:getAssignmentsInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelAppointmentResponse">
    <wsdl:part element="api:cancelAppointmentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getArchivedAppointments">
    <wsdl:part element="api:getArchivedAppointments" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAssignmentsInfoResponse">
    <wsdl:part element="api:getAssignmentsInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="OrchestratorServicePT">
    <wsdl:operation name="cancelAppointment">
      <wsdl:input message="tns:cancelAppointment" name="cancelAppointment"></wsdl:input>
      <wsdl:output message="tns:cancelAppointmentResponse" name="cancelAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <wsdl:input message="tns:createAppointment" name="createAppointment"></wsdl:input>
      <wsdl:output message="tns:createAppointmentResponse" name="createAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <wsdl:input message="tns:getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient"></wsdl:input>
      <wsdl:output message="tns:getAppointmentReceptionsByPatientResponse" name="getAppointmentReceptionsByPatientResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getArchivedAppointments">
      <wsdl:input message="tns:getArchivedAppointments" name="getArchivedAppointments"></wsdl:input>
      <wsdl:output message="tns:getArchivedAppointmentsResponse" name="getArchivedAppointmentsResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <wsdl:input message="tns:getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo"></wsdl:input>
      <wsdl:output message="tns:getAvailableResourceScheduleInfoResponse" name="getAvailableResourceScheduleInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <wsdl:input message="tns:getDoctorsInfo" name="getDoctorsInfo"></wsdl:input>
      <wsdl:output message="tns:getDoctorsInfoResponse" name="getDoctorsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <wsdl:input message="tns:getReferralsInfo" name="getReferralsInfo"></wsdl:input>
      <wsdl:output message="tns:getReferralsInfoResponse" name="getReferralsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <wsdl:input message="tns:getSpecialitiesInfo" name="getSpecialitiesInfo"></wsdl:input>
      <wsdl:output message="tns:getSpecialitiesInfoResponse" name="getSpecialitiesInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <wsdl:input message="tns:getAssignmentsInfo" name="getAssignmentsInfo"></wsdl:input>
      <wsdl:output message="tns:getAssignmentsInfoResponse" name="getAssignmentsInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <wsdl:input message="tns:getDoctorsInfoForLI" name="getDoctorsInfoForLI"></wsdl:input>
      <wsdl:output message="tns:getDoctorsInfoForLIResponse" name="getDoctorsInfoForLIResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForSpeciality">
      <wsdl:input message="tns:getLpusForSpeciality" name="getLpusForSpeciality"></wsdl:input>
      <wsdl:output message="tns:getLpusForSpecialityResponse" name="getLpusForSpecialityResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <wsdl:input message="tns:shiftAppointment" name="shiftAppointment"></wsdl:input>
      <wsdl:output message="tns:shiftAppointmentResponse" name="shiftAppointmentResponse"></wsdl:output>
      <wsdl:fault message="tns:SoapException" name="SoapException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OrchestratorServiceBinding" type="tns:OrchestratorServicePT">
    <soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="cancelAppointment">
      <soap12:operation soapAction="urn://cancelAppointment"/>
      <wsdl:input name="cancelAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAppointmentReceptionsByPatient">
      <soap12:operation soapAction="urn://getAppointmentReceptionsByPatient"/>
      <wsdl:input name="getAppointmentReceptionsByPatient">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAppointmentReceptionsByPatientResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getArchivedAppointments">
      <soap12:operation soapAction="urn://getArchivedAppointments"/>
      <wsdl:input name="getArchivedAppointments">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getArchivedAppointmentsResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferralsInfo">
      <soap12:operation soapAction="urn://getReferralsInfo"/>
      <wsdl:input name="getReferralsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferralsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAppointment">
      <soap12:operation soapAction="urn://createAppointment"/>
      <wsdl:input name="createAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableResourceScheduleInfo">
      <soap12:operation soapAction="urn://getAvailableResourceScheduleInfo"/>
      <wsdl:input name="getAvailableResourceScheduleInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableResourceScheduleInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfo">
      <soap12:operation soapAction="urn://getDoctorsInfo"/>
      <wsdl:input name="getDoctorsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSpecialitiesInfo">
      <soap12:operation soapAction="urn://getSpecialitiesInfo"/>
      <wsdl:input name="getSpecialitiesInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSpecialitiesInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAssignmentsInfo">
      <soap12:operation soapAction="urn://getAssignmentsInfo"/>
      <wsdl:input name="getAssignmentsInfo">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAssignmentsInfoResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDoctorsInfoForLI">
      <soap12:operation soapAction="urn://getDoctorsInfoForLI"/>
      <wsdl:input name="getDoctorsInfoForLI">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoctorsInfoForLIResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLpusForSpeciality">
      <soap12:operation soapAction="urn://getLpusForSpeciality"/>
      <wsdl:input name="getLpusForSpeciality">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLpusForSpecialityResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="shiftAppointment">
      <soap12:operation soapAction="urn://shiftAppointment"/>
      <wsdl:input name="shiftAppointment">
        <soap12:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="shiftAppointmentResponse">
        <soap12:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="SoapException">
        <soap12:fault name="SoapException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OrchestratorService">
    <wsdl:port binding="tns:OrchestratorServiceBinding" name="OrchestratorServicePTB">
      <soap12:address location="http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmRew.jy8zg2VZoYlH2RxaatOPM1fhErPQmzT6zR6YjTkyK7P47hHD65yXB6.hKtbj4a6os7qi_.OI8lIPWaS3sjVy2LMut0ooaVR2WledpCULhh3oGHv3Mb6SnTCkWs89lwGaPkeTLV.bQUSXwvDPjOk6rN7AJNQMiNxckpkzy1X3MkrIhdQmjyLIfcpyXa</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://api.service.soap.emias.lanit.ru/v5/" version="1.1" xmlns:core="http://api.service.soap.emias.lanit.ru/core/v5/" xmlns:ns1="http://api.service.soap.emias.lanit.ru/v5/" xmlns:tns="http://api.service.soap.emias.lanit.ru/v5/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://api.service.soap.emias.lanit.ru/core/v5/" schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmRew.jy8zg2VZoYlH2RxaatOPM1fhErPQmzT6zR6YjTkyK7P47hHD65yXB6.hKtbj4a6os7qi_.OI8lIPWaS3sjVy2LMut0ooaVR2WledpCULhh3oGHv3Mb6SnTCkWs89lwGaPkeTLV.bQUSXwvDPjOk6rN7AJNQMiNxckyjyoXLhHcobvqN1NinTnd.8Qo6Bga6QI-"/>
  <!--======================== Элементы =====================================-->
  <!--Отмена записи на прием-->
  <xs:element name="cancelAppointment" type="tns:cancelAppointment"/>
  <xs:element name="cancelAppointmentResponse" type="tns:cancelAppointmentResponse"/>
  <!--Создание записи на прием-->
  <xs:element name="createAppointment" type="tns:createAppointment"/>
  <xs:element name="createAppointmentResponse" type="tns:createAppointmentResponse"/>
  <!--Получение списка записей для пациента-->
  <xs:element name="getAppointmentReceptionsByPatient" type="tns:getAppointmentReceptionsByPatient"/>
  <xs:element name="getAppointmentReceptionsByPatientResponse" type="tns:getAppointmentReceptionsByPatientResponse"/>
  <!--Получение списка архивных записей для пациента-->
  <xs:element name="getArchivedAppointments" type="tns:getArchivedAppointments"/>
  <xs:element name="getArchivedAppointmentsResponse" type="tns:getArchivedAppointmentsResponse"/>
  <!--Получение расписания врача-->
  <xs:element name="getAvailableResourceScheduleInfo" type="tns:getAvailableResourceScheduleInfo"/>
  <xs:element name="getAvailableResourceScheduleInfoResponse" type="tns:getAvailableResourceScheduleInfoResponse"/>
  <!--Получение списка врачей-->
  <xs:element name="getDoctorsInfo" type="tns:getDoctorsInfo"/>
  <xs:element name="getDoctorsInfoResponse" type="tns:getDoctorsInfoResponse"/>
  <!--Получение направлений для пациента-->
  <xs:element name="getReferralsInfo" type="tns:getReferralsInfo"/>
  <xs:element name="getReferralsInfoResponse" type="tns:getReferralsInfoResponse"/>
  <!--Получение списка специальностей-->
  <xs:element name="getSpecialitiesInfo" type="tns:getSpecialitiesInfo"/>
  <xs:element name="getSpecialitiesInfoResponse" type="tns:getSpecialitiesInfoResponse"/>
  <!--Получение назначений на ЛИ-->
  <xs:element name="getAssignmentsInfo" type="tns:getAssignmentsInfo"/>
  <xs:element name="getAssignmentsInfoResponse" type="tns:getAssignmentsInfoResponse"/>
  <!--Получение списка доступных ресурсов для записи пациента на Лабораторные Исследования (ЛИ)-->
  <xs:element name="getDoctorsInfoForLI" type="tns:getDoctorsInfoForLI"/>
  <xs:element name="getDoctorsInfoForLIResponse" type="tns:getDoctorsInfoForLIResponse"/>
  <!--Предоставление перечня ЛПУ для вакцинации-->
  <xs:element name="getLpusForSpeciality" type="tns:getLpusForSpeciality"/>
  <xs:element name="getLpusForSpecialityResponse" type="tns:getLpusForSpecialityResponse"/>
  <!--Перенос записи на прием-->
  <xs:element name="shiftAppointment" type="tns:shiftAppointment"/>
  <xs:element name="shiftAppointmentResponse" type="tns:shiftAppointmentResponse"/>
  <!--======================== Ошибки =====================================-->
  <xs:element name="soapException" type="tns:soapException"/>
  <xs:element name="appointmentCodeErrorFaultInfo" type="tns:appointmentCodeErrorFaultInfo"/>
  <!--======================== Типы данных =====================================-->
  <xs:complexType name="availableResourceBasis">
    <xs:sequence>
      <xs:element minOccurs="0" name="referralId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Идентификатор направления, по которому осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="medSpecialityAttachment" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак записи по прикреплению к специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="specialityId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД специализации ДР, по которой осуществлялся подбор ДР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="ldpId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД вида ЛДП</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>Профиль взятия</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="referralType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REF_TO_DOCTOR"/>
      <xs:enumeration value="REF_TO_LDP"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="signActiveArchiveType">
    <xs:annotation>
      <xs:documentation>Признак «Архивные и отмененные записи»</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long">
      <xs:enumeration value="0"/>
      <xs:enumeration value="1"/>
      <xs:enumeration value="2"/>
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="baseDto">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="ldpType">
    <xs:sequence>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="procedure" type="xs:boolean"/>
      <xs:element minOccurs="0" name="investigation" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="ambulatory" type="xs:string"/>
      <xs:element minOccurs="0" name="patientSign" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referral">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="comment" type="xs:string"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuType" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuName" type="xs:string"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element minOccurs="0" name="diagnosis" type="tns:diagnosis">
        <xs:annotation>
          <xs:documentation>Информация о диагнозе</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedDoctor" type="tns:jobInfo">
        <xs:annotation>
          <xs:documentation>Информация о враче, выдавшем направление/назначение</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentOpenDate" type="xs:date"/>
      <xs:element name="countActiveAppointment" type="xs:int"/>
      <xs:element name="countAppointmentWithReceptionFact" type="xs:int"/>
      <xs:element minOccurs="0" name="invalid" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="referralDesc">
    <xs:sequence>
      <xs:element name="referralId" type="xs:long"/>
      <xs:element name="startTime" type="xs:date"/>
      <xs:element name="endTime" type="xs:date"/>
      <xs:element minOccurs="0" name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentDesc">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="appointmentNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleOfDay">
    <xs:sequence>
      <xs:element name="date" type="xs:date"/>
      <xs:element maxOccurs="unbounded" name="scheduleBySlot" type="tns:scheduleBySlot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medicalSpeciality">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="male" type="xs:boolean"/>
      <xs:element minOccurs="0" name="female" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="areaType" type="xs:string"/>
      <xs:element minOccurs="0" name="onlyByRefferal" type="xs:boolean"/>
      <xs:element minOccurs="0" name="therapeutic" type="xs:boolean"/>
      <xs:element minOccurs="0" name="ignoreAttachment" type="xs:boolean"/>
      <xs:element minOccurs="0" name="paid" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toDoctor">
    <xs:sequence>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="specialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="doctorFio" type="xs:string"/>
      <xs:element name="receptionTypeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="toLdp">
    <xs:sequence>
      <xs:element name="ldpTypeId" type="xs:long"/>
      <xs:element name="ldpTypeName" type="xs:string"/>
      <xs:element minOccurs="0" name="countAssignmentProcedures" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="diagnosis">
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код по МКБ-10</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование диагноза</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="jobInfo">
    <xs:sequence>
      <xs:element name="jobExecutionId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД_Исполнение должности</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="fio" type="xs:string">
        <xs:annotation>
          <xs:documentation>Фамилия Имя Отчество</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="snils" type="xs:string">
        <xs:annotation>
          <xs:documentation>СНИЛС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="specialityId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД_Специальность</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="specialityName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование специальности</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointment">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="liveQueueTicketId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="liveQueueTicketNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер талона в ЖО</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="lpuId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД ЛПУ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="typeLpu" type="xs:string"/>
      <xs:element name="nameLpu" type="xs:string"/>
      <xs:element name="lpuAddress" type="xs:string"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:element name="type" type="xs:string"/>
      <xs:element minOccurs="0" name="enableCancel" type="xs:boolean"/>
      <xs:element minOccurs="0" name="enableShift" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Разрешен ли перенос</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД КР</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="roomId" type="xs:long"/>
      <xs:element minOccurs="0" name="roomNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД Адресной точки кабинета</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="toDoctor" type="tns:toDoctor"/>
      <xs:element minOccurs="0" name="toLdp" type="tns:toLdp"/>
      <xs:element minOccurs="0" name="toBM" type="ns1:SamplingType"/>
      <xs:element name="statusId" type="xs:int"/>
      <xs:element minOccurs="0" name="cancelInfo" type="ns1:cancelInfo"/>
      <xs:element minOccurs="0" name="receptionFactId" type="xs:long"/>
      <xs:element minOccurs="0" name="referral" type="tns:referralDesc">
        <xs:annotation>
          <xs:documentation>Направление</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelInfo">
    <xs:sequence>
      <xs:element name="cancelReasonId" type="xs:long"/>
      <xs:element name="cancelReasonDesc" type="xs:string"/>
      <xs:element minOccurs="0" name="cancelTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="name" type="xs:string"/>
      <xs:element name="arType" type="xs:int"/>
      <xs:element minOccurs="0" name="specialityChangeAbility" type="xs:boolean"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityName" type="xs:string"/>
      <xs:element minOccurs="0" name="mainDoctor" type="ns1:mainDoctor"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="receptionType" type="ns1:receptionType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ldpType" type="ns1:ldpTypeForAr"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="samplingType" type="ns1:SamplingType"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="complexResource" type="ns1:complexResource"/>
      <xs:element default="false" name="district" type="xs:boolean"/>
      <xs:element default="false" name="replacement" type="xs:boolean"/>
      <xs:element minOccurs="0" name="nondistrict" type="xs:boolean"/>
      <xs:element default="false" name="availableByReferral" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DutyARScheduleInfo">
    <xs:sequence>
      <xs:element name="startTime" type="xs:time"/>
      <xs:element name="endTime" type="xs:time"/>
      <xs:element name="existedLiveQueueTickets" type="xs:int"/>
      <xs:element name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResultCreationAppointmentToDutyDoctor">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="tns:appointmentDesc"/>
      <xs:element name="liveQueueTicketId" type="xs:long"/>
      <xs:element name="liveQueueTicketNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="complaintId" type="xs:long"/>
      <xs:element minOccurs="0" name="inquiryPurposeId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="eno" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="createAppointmentResponse">
    <xs:sequence>
      <xs:element name="appointmentDesc" type="ns1:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatient">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="signActiveArchive" type="tns:signActiveArchiveType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAppointmentReceptionsByPatientResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointment" type="tns:appointment"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getArchivedAppointments">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="period" type="ns1:DatePeriodOptional"/>
      <xs:element name="externalSystemId" type="xs:string"/>
      <xs:element minOccurs="0" name="pagingOptions" type="core:PagingOptions"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getArchivedAppointmentsResponse">
    <xs:sequence>
      <xs:element name="result" type="tns:AppointmentListPage"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AppointmentListPage">
    <xs:annotation>
      <xs:documentation>Страница Списка записей</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="core:PagingResults">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="appointment" type="tns:appointment">
            <xs:annotation>
              <xs:documentation>Сведения о Записи</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfo">
    <xs:sequence>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element minOccurs="0" name="complexResourceId" type="xs:long"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="referralId" type="xs:long"/>
      <xs:element minOccurs="0" name="period" type="ns1:DatePeriod"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAvailableResourceScheduleInfoResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="return" type="tns:availableResourceScheduleBySlots"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:choice>
        <xs:element name="appointmentId" type="xs:long"/>
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="specialityId" type="xs:long"/>
      </xs:choice>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="includeArWithoutSlots" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>По умолчанию - true</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="quotaTypes">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="quotaType" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element default="false" minOccurs="0" name="returnCompleted" type="xs:boolean"/>
      <xs:element default="false" minOccurs="0" name="returnExtended" type="xs:boolean"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getReferralsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="referral" type="tns:referral"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element minOccurs="0" name="quotaTypes" type="tns:quotaTypes"/>
      <xs:element minOccurs="0" name="disableQuotaTypes" type="tns:quotaTypes"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getSpecialitiesInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="medicalSpeciality" type="tns:medicalSpeciality"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfo">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string">
        <xs:annotation>
          <xs:documentation>Номер полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string">
        <xs:annotation>
          <xs:documentation>Серия полиса ОМС</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="birthDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата рождения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element default="false" minOccurs="0" name="returnExtended" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Вернуть расширенную информацию о направлении</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="externalSystemId" type="xs:string">
        <xs:annotation>
          <xs:documentation>Обозначение внешней системы</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getAssignmentsInfoResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="assignment" type="ns1:AssignmentGroup">
        <xs:annotation>
          <xs:documentation>Активные назначения пациента</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLI">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="assignment" type="tns:Assignment"/>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getDoctorsInfoForLIResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="availableResource" type="tns:availableResource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForSpeciality">
    <xs:sequence>
      <xs:element name="omsNumber">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="17"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="omsSeries">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="6"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="externalSystemId">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="30"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="getLpusForSpecialityResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="lpu" type="tns:lpuInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lpuInfo">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="shortName" type="xs:string"/>
      <xs:element minOccurs="0" name="priority" type="xs:boolean"/>
      <xs:element maxOccurs="unbounded" name="address" type="tns:LpuAddressInfo"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LpuAddressInfo">
    <xs:sequence>
      <xs:element name="buildingRegistryCode" type="xs:long"/>
      <xs:element name="addressString" type="xs:string"/>
      <xs:element minOccurs="0" name="territory" type="tns:District"/>
      <xs:element minOccurs="0" name="district" type="tns:District"/>
      <xs:element minOccurs="0" name="coordinates" type="tns:Coordinates"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="metroStation" type="tns:MetroStation"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="District">
    <xs:sequence>
      <xs:element name="code" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Coordinates">
    <xs:sequence>
      <xs:element name="latitude" type="xs:string"/>
      <xs:element name="longitude" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MetroStation">
    <xs:sequence>
      <xs:element name="station" type="xs:string"/>
      <xs:element name="line" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="availableResourceId" type="xs:long"/>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
      <xs:choice minOccurs="0">
        <xs:element name="referralId" type="xs:long"/>
        <xs:element name="receptionTypeId" type="xs:long"/>
      </xs:choice>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="shiftAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="tns:appointmentDesc"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointment">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element name="externalSystemId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cancelAppointmentResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentCodeErrorFaultInfo">
    <xs:annotation>
      <xs:documentation>Error</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="messageText" type="xs:string"/>
      <xs:element minOccurs="0" name="userId" type="xs:string"/>
      <xs:element minOccurs="0" name="operation" type="xs:string"/>
      <xs:element minOccurs="0" name="resource" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="availableResourceScheduleBySlots">
    <xs:sequence>
      <xs:element name="availableResource" type="ns1:availableResource"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="scheduleOfDay" type="ns1:scheduleOfDay"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="appointmentLock">
    <xs:sequence>
      <xs:element name="appointmentId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSpecialityId" type="xs:long"/>
      <xs:element minOccurs="0" name="arSamplingTypeId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="patient" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scheduleBySlot">
    <xs:sequence>
      <xs:element name="complexResourceId" type="xs:long"/>
      <xs:element name="cabinetNumber" type="xs:string"/>
      <xs:element maxOccurs="unbounded" name="slot" type="ns1:slot"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="slot">
    <xs:sequence>
      <xs:element name="startTime" type="xs:dateTime"/>
      <xs:element name="endTime" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mainDoctor">
    <xs:sequence>
      <xs:element minOccurs="0" name="specialityName" type="xs:string"/>
      <xs:element name="specialityId" type="xs:long"/>
      <xs:element name="firstName" type="xs:string"/>
      <xs:element name="lastName" type="xs:string"/>
      <xs:element minOccurs="0" name="secondName" type="xs:string"/>
      <xs:element name="mejiId" type="xs:long"/>
      <xs:element name="employeeId" type="xs:long"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Assignment">
    <xs:sequence>
      <xs:element name="moId" type="xs:long"/>
      <xs:element name="samplingTypeId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AssignmentGroup">
    <xs:sequence>
      <xs:element name="moId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД МО принимающее (головное ЛПУ куста)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="toBM" type="ns1:SamplingType">
        <xs:annotation>
          <xs:documentation>Профиль взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="period" type="ns1:DatePeriod">
        <xs:annotation>
          <xs:documentation>Период действия назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="active" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак активности назначения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="appointmentAvailable" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак возможности создать запись</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentOpenDate" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата открытия записи по назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="appointmentId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД активной записи по данному назначению</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element maxOccurs="unbounded" name="registryEntry" type="ns1:registryEntry">
        <xs:annotation>
          <xs:documentation>Реестровые записи</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:sequence>
      <xs:element name="dateFrom" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="dateTo" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriodOptional">
    <xs:sequence>
      <xs:element minOccurs="0" name="dateFrom" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="dateTo" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="registryEntry">
    <xs:sequence>
      <xs:element name="entryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД реестровой записи</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД лабораторного исследования</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="laboratoryName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование ЛИ (краткое)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialId" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="biomaterialName" type="xs:string">
        <xs:annotation>
          <xs:documentation>Наименование биоматериала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="hasMemo" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак наличия памятки</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="diagnosis" type="ns1:diagnosis">
        <xs:annotation>
          <xs:documentation>Информация о диагнозе</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="issuedDoctor" type="ns1:jobInfo">
        <xs:annotation>
          <xs:documentation>Информация о враче, выдавшем направление/назначение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="receptionType">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="primary" type="xs:string"/>
      <xs:element minOccurs="0" name="home" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ldpTypeForAr">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="complexResource">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element minOccurs="0" name="room" type="ns1:room"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="room">
    <xs:sequence>
      <xs:element name="id" type="xs:long"/>
      <xs:element minOccurs="0" name="number" type="xs:string"/>
      <xs:element minOccurs="0" name="lpuId" type="xs:long"/>
      <xs:element minOccurs="0" name="lpuShortName" type="xs:string"/>
      <xs:element minOccurs="0" name="addressPointId" type="xs:long"/>
      <xs:element minOccurs="0" name="defaultAddress" type="xs:string"/>
      <xs:element name="availabilityDate" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SamplingType">
    <xs:sequence>
      <xs:element name="id" type="xs:long">
        <xs:annotation>
          <xs:documentation>ИД профиля взятия БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="name" type="xs:string">
        <xs:annotation>
          <xs:documentation>Название профиля</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="self" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак самовзятого БМ</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="soapException">
    <xs:sequence>
      <xs:element name="code" type="xs:string"/>
      <xs:element name="text" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="appointmentLock" type="tns:appointmentLock"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="patientGroupError" type="tns:patientShort"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientShort">
    <xs:sequence>
      <xs:element minOccurs="0" name="patientId" type="xs:long"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="patientGroupEntry">
    <xs:sequence>
      <xs:element name="omsNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="omsSeries" type="xs:string"/>
      <xs:element name="birthDate" type="xs:date"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TimeInterval">
    <xs:sequence>
      <xs:element name="start" type="xs:dateTime"/>
      <xs:element name="end" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmRew.jy8zg2VZoYlH2RxaatOPM1fhErPQmzT6zR6YjTkyK7P47hHD65yXB6.hKtbj4a6os7qi_.OI8lIPWaS3sjVy2LMut0ooaVR2WledpCULhh3oGHv3Mb6SnTCkWs89lwGaPkeTLV.bQUSXwvDPjOk6rN7AJNQMiNxckyjyoXLhHcobvqN1NinTnd.8Qo6Bga6QI-</con:url><con:content>&lt;xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://api.service.soap.emias.lanit.ru/core/v5/" version="1.0" xmlns="http://api.service.soap.emias.lanit.ru/core/v5/" xmlns:xs="http://www.w3.org/2001/XMLSchema">&#13;
  &lt;xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmRew.jy8zg2VZoYlH2RxaatOPM1fhErPQmzT6zR6YjTkyK7P47hHD65yXB6.hKtbj4a6os7qi_.OI8lIPWaS3sjVy2LMut0ooaVR2WledpCULhh3oGHv3Mb6SnTCkWs89lwE7zucCSI7qkHWD0rbrPElqctXwqpOtDi2aezqtH6_Nzk"/>&#13;
&lt;/xs:schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmRew.jy8zg2VZoYlH2RxaatOPM1fhErPQmzT6zR6YjTkyK7P47hHD65yXB6.hKtbj4a6os7qi_.OI8lIPWaS3sjVy2LMut0ooaVR2WledpCULhh3oGHv3Mb6SnTCkWs89lwE7zucCSI7qkHWD0rbrPElqctXwqpOtDi2aezqtH6_Nzk</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.2" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmRew.jy8zg2VZoYlH2RxaatOPM1fhErPQmzT6zR6YjTkyK7P47hHD65yXB6.hKtbj4a6os7qi_.OI8lIPWaS3sjVy2LMut0ooaVR2WledpCULhh3oGHv3Mb6SnTCkWs89lwE7zucCSI_r8GSXYwceuNy7vd7QjcwC_M_4PTaa_B5YGT9mQ-"/>
  <!--references-->
  <xs:element name="mail" type="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalOrganizationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинской организации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="medicalFacilityId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор Медицинского учреждения</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="compositionId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Композиции Think!EHR
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="simiDocumentId" type="GUID">
    <xs:annotation>
      <xs:documentation>Идентификатор
Документа СИМИ
ЕМИАС.СИМИ</xs:documentation>
    </xs:annotation>
  </xs:element>
  <!--abstract types-->
  <xs:complexType abstract="true" name="Base">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцеми которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор
сущности/записи
на уровне всего ЕМИАС</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="true" name="EntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцем которых является
текущий продукт ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base">
        <xs:attribute name="archived" type="xs:boolean" use="required">
          <xs:annotation>
            <xs:documentation>Признак "Архивная сущность"</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания
компонентов сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="ForeignEntityBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания сущностей,
владельцами которых являются
другие продукты ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="EntityBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignEntityBase">
        <xs:sequence>
          <xs:element name="title" type="xs:string">
            <xs:annotation>
              <xs:documentation>Наименование элемента справочника</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="NsiWithCodeBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания типов,
реализующих справочники ЕМИАС.НСИ.2, в которых имеется бизнес-код</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="NsiBase">
        <xs:attribute name="code" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Бизнес-код</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="SIMIDocumentBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип,
используемый для описания cведений о документе СИМИ</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="simiDocumentId"/>
      <xs:element minOccurs="0" ref="compositionId"/>
    </xs:sequence>
  </xs:complexType>
  <!--async operation status-->
  <xs:element name="operationId" type="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор операции</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OperationExecutionStatus">
    <xs:annotation>
      <xs:documentation>Статус выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="isCompleted" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак окончания выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="completenessProgress" type="OperationCompletenessBase">
        <xs:annotation>
          <xs:documentation>Сведения о текущем статусе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="hasSucceded" type="xs:boolean">
        <xs:annotation>
          <xs:documentation>Признак успешности выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
        <xs:annotation>
          <xs:documentation>Коллекция сообщений, порожденных в ходе выполнения операции</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="ID" use="required">
      <xs:annotation>
        <xs:documentation>Идентификатор операции</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType abstract="false" name="OperationCompletenessPercentage">
    <xs:annotation>
      <xs:documentation>Описание текущего статуса выполнения операции в процентах (0%-100%)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="OperationCompletenessBase">
        <xs:sequence>
          <xs:element name="completenessStatus">
            <xs:annotation>
              <xs:documentation>Статус (0%-100%)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:unsignedByte">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType abstract="true" name="OperationCompletenessBase">
    <xs:annotation>
      <xs:documentation>Базовый абстрактный тип для описания текущего статуса выполнения операции</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <!--calling methods' options-->
  <xs:element name="options" type="Options">
    <xs:annotation>
      <xs:documentation>Параметры вызова метода</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="Options">
    <xs:annotation>
      <xs:documentation>Набор именованных значений</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="KeyValuePair">
        <xs:annotation>
          <xs:documentation>Именованное значение</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--pagination-->
  <xs:element name="pagingOptions" type="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType abstract="true" name="PagingResults">
    <xs:annotation>
      <xs:documentation>Список с пагинацией</xs:documentation>
    </xs:annotation>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageTotal" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество страниц</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="morePagesAvailable" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Флаг доступности других страниц с результатами для "постраничного листания" (true - если доступны еще страницы; false - иначе)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="totalItemsCount" type="xs:long" use="required">
      <xs:annotation>
        <xs:documentation>Общее количество элементов (на всех страницах)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="PagingOptions">
    <xs:annotation>
      <xs:documentation>Параметры пагинации</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" ref="sortingOptions"/>
    </xs:sequence>
    <xs:attribute name="pageNumber" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Номер страницы (zero-based)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pageSize" type="xs:int" use="required">
      <xs:annotation>
        <xs:documentation>Размер страницы</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--sorting-->
  <xs:element name="sortingOptions" type="SortingOptions">
    <xs:annotation>
      <xs:documentation>Параметры сортировки</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SortingOptions">
    <xs:annotation>
      <xs:documentation>Условия сортировки</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="3" name="sortOrder" type="SortOrder">
        <xs:annotation>
          <xs:documentation>Условия сортировки
(используются в соответствии с
переданной последовательностью)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SortOrder">
    <xs:annotation>
      <xs:documentation>Сортировка</xs:documentation>
    </xs:annotation>
    <xs:attribute name="attributeName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Наименование поля, по которому должна быть произведена сортировка</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="false" name="desceding" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Направление сортировки</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <!--void response-->
  <xs:element fixed="true" name="result">
    <xs:annotation>
      <xs:documentation>Элемент для использования в методах, не предполагающих возврат какого-либо значения</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:boolean"/>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <!--base types-->
  <xs:complexType name="TimeInterval">
    <xs:annotation>
      <xs:documentation>Временной период (время)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время начала интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:time">
        <xs:annotation>
          <xs:documentation>Время окончания интервала</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatePeriod">
    <xs:annotation>
      <xs:documentation>Временной период (дата)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="start" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата начала периода</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="end" type="xs:date">
        <xs:annotation>
          <xs:documentation>Дата окончания периода</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!--keys-->
  <xs:complexType name="EntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор сущности,
непосредственно принадлежащей
текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Base"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ForeignEntityId">
    <xs:annotation>
      <xs:documentation>Идентфикатор
сущности ЕМИАС,
внешней по отношнению
к текущему продукту ЕМИАС</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="NsiGlobalId">
    <xs:annotation>
      <xs:documentation>Глобальный идентфикатор
ЕМИАС.НСИ</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ForeignBase"/>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService?xsd=AAAADHAjUCM4P2cuZURELmRew.jy8zg2VZoYlH2RxaatOPM1fhErPQmzT6zR6YjTkyK7P47hHD65yXB6.hKtbj4a6os7qi_.OI8lIPWaS3sjVy2LMut0ooaVR2WledpCULhh3oGHv3Mb6SnTCkWs89lwE7zucCSI_r8GSXYwceuNy7vd7QjcwC_M_4PTaa_B5YGT9mQ-</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--error message description-->
  <xs:complexType name="ErrorMessageCollection">
    <xs:annotation>
      <xs:documentation>Коллекция сообщений об ошибках</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="message" type="ErrorMessage">
        <xs:annotation>
          <xs:documentation>Сообщение об ошибке</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ErrorMessage">
    <xs:annotation>
      <xs:documentation>Сообщение об ошибке</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="Message">
        <xs:sequence>
          <xs:element minOccurs="0" name="parameters">
            <xs:annotation>
              <xs:documentation>Коллекция параметров сообщения</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" name="parameter" type="KeyValuePair">
                  <xs:annotation>
                    <xs:documentation>Параметр сообщения</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="messages" type="ErrorMessageCollection">
            <xs:annotation>
              <xs:documentation>Сопутствующие сообщения об ошибках</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="ErrorMessageTypes" use="required">
          <xs:annotation>
            <xs:documentation>Тип сообщения</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="ErrorMessageTypes">
    <xs:annotation>
      <xs:documentation>Тип сообщения об ошибке</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ERROR">
        <xs:annotation>
          <xs:documentation>Ошибка</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="WARNING">
        <xs:annotation>
          <xs:documentation>Предупреждение (не блокирующая ошибка)</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="INFO">
        <xs:annotation>
          <xs:documentation>Информационное сообщение</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ID">
    <xs:annotation>
      <xs:documentation>Идентификатор</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:long"/>
  </xs:simpleType>
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>Глобальный 128-битный идентификатор (Globally Unique Identifier)</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="KeyValuePair">
    <xs:annotation>
      <xs:documentation>Представляет тип "ключ/значение"</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="key" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>Ключ</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="Mail">
    <xs:annotation>
      <xs:documentation>Адрес электронной почты</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="320"/>
      <xs:pattern value=".+@.+\..+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="Message">
    <xs:annotation>
      <xs:documentation>Сообщение</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="code" type="xs:string">
        <xs:annotation>
          <xs:documentation>Код сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="message" type="xs:string">
        <xs:annotation>
          <xs:documentation>Текст сообщения</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint></con:endpoints><con:operation id="b697a3ab-0ef1-457a-bc69-8bb714f841b6" isOneWay="false" action="urn://cancelAppointment" name="cancelAppointment" bindingOperationName="cancelAppointment" type="Request-Response" outputName="cancelAppointmentResponse" inputName="cancelAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d50160fd-0585-40cd-8535-81cd8e17b35f" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:cancelAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:cancelAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/cancelAppointment"/></con:call></con:operation><con:operation id="f4463ec1-02e8-4d42-937b-8403e908a9dd" isOneWay="false" action="urn://createAppointment" name="createAppointment" bindingOperationName="createAppointment" type="Request-Response" outputName="createAppointmentResponse" inputName="createAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c7d64a9a-6082-463e-979b-eeb0f7778da7" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:createAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <!--Optional:-->\r
         <complaintId>?</complaintId>\r
         <!--Optional:-->\r
         <inquiryPurposeId>?</inquiryPurposeId>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <eno>?</eno>\r
      </v5:createAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/createAppointment"/></con:call></con:operation><con:operation id="ed67e150-13c2-4736-8023-f3e7f579d2cf" isOneWay="false" action="urn://getAppointmentReceptionsByPatient" name="getAppointmentReceptionsByPatient" bindingOperationName="getAppointmentReceptionsByPatient" type="Request-Response" outputName="getAppointmentReceptionsByPatientResponse" inputName="getAppointmentReceptionsByPatient" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cb8d4def-b2fa-4a0e-8197-996cd952906c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAppointmentReceptionsByPatient>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <externalSystemId>?</externalSystemId>\r
         <!--Optional:-->\r
         <signActiveArchive>?</signActiveArchive>\r
      </v5:getAppointmentReceptionsByPatient>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getAppointmentReceptionsByPatient"/></con:call></con:operation><con:operation id="533676d1-a933-432c-b1ab-cefd47e789b3" isOneWay="false" action="urn://getArchivedAppointments" name="getArchivedAppointments" bindingOperationName="getArchivedAppointments" type="Request-Response" outputName="getArchivedAppointmentsResponse" inputName="getArchivedAppointments" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="277d927e-4741-403a-b45f-0456b386137d" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/" xmlns:v51="http://api.service.soap.emias.lanit.ru/core/v5/">\r
 <soap:Header>
      <wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
         <wsse:UsernameToken>
            <wsse:Username>EIM</wsse:Username>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap:Header>
   <soap:Body>\r
      <v5:getArchivedAppointments>\r
         <omsNumber>7700007178231039</omsNumber>\r
         <birthDate>1939-10-23</birthDate>\r
         <externalSystemId>EIM</externalSystemId>\r
         <!--Optional:-->\r
         <pagingOptions pageNumber="0" pageSize="25">\r
 
         </pagingOptions>\r
      </v5:getArchivedAppointments>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getArchivedAppointments"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="19b7ec24-46e2-493c-a445-2200c3146a09" isOneWay="false" action="urn://getAssignmentsInfo" name="getAssignmentsInfo" bindingOperationName="getAssignmentsInfo" type="Request-Response" outputName="getAssignmentsInfoResponse" inputName="getAssignmentsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fbdd990f-2b08-44f6-a2b2-e548ed6ddab5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAssignmentsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <returnExtended>false</returnExtended>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAssignmentsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getAssignmentsInfo"/></con:call></con:operation><con:operation id="e3c490e4-47e9-4220-a172-1c2c9243ec07" isOneWay="false" action="urn://getAvailableResourceScheduleInfo" name="getAvailableResourceScheduleInfo" bindingOperationName="getAvailableResourceScheduleInfo" type="Request-Response" outputName="getAvailableResourceScheduleInfoResponse" inputName="getAvailableResourceScheduleInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="26513b0b-5f8d-499e-bab9-d7e5fdd8cdcc" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getAvailableResourceScheduleInfo>\r
         <availableResourceId>?</availableResourceId>\r
         <!--Optional:-->\r
         <complexResourceId>?</complexResourceId>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <referralId>?</referralId>\r
         <!--Optional:-->\r
         <period>\r
            <dateFrom>?</dateFrom>\r
            <dateTo>?</dateTo>\r
         </period>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getAvailableResourceScheduleInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getAvailableResourceScheduleInfo"/></con:call></con:operation><con:operation id="0cb6ce78-0999-4874-b15f-037fc0490aee" isOneWay="false" action="urn://getDoctorsInfo" name="getDoctorsInfo" bindingOperationName="getDoctorsInfo" type="Request-Response" outputName="getDoctorsInfoResponse" inputName="getDoctorsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f8e20536-0ac0-4ab8-b7ff-8867a0be1f2a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--You have a CHOICE of the next 3 items at this level-->\r
         <appointmentId>?</appointmentId>\r
         <referralId>?</referralId>\r
         <specialityId>?</specialityId>\r
         <!--Optional:-->\r
         <lpuId>?</lpuId>\r
         <!--Optional:-->\r
         <includeArWithoutSlots>?</includeArWithoutSlots>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getDoctorsInfo"/></con:call></con:operation><con:operation id="ff6530d5-0e15-4882-9784-3875cd5c9e8b" isOneWay="false" action="urn://getDoctorsInfoForLI" name="getDoctorsInfoForLI" bindingOperationName="getDoctorsInfoForLI" type="Request-Response" outputName="getDoctorsInfoForLIResponse" inputName="getDoctorsInfoForLI" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7934520a-1a37-4f28-9281-00dab1b69b89" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getDoctorsInfoForLI>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <assignment>\r
            <moId>?</moId>\r
            <samplingTypeId>?</samplingTypeId>\r
            <period>\r
               <dateFrom>?</dateFrom>\r
               <dateTo>?</dateTo>\r
            </period>\r
         </assignment>\r
         <!--Optional:-->\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getDoctorsInfoForLI>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getDoctorsInfoForLI"/></con:call></con:operation><con:operation id="b671eb46-5a28-400f-95f5-02e3c7b650d4" isOneWay="false" action="urn://getLpusForSpeciality" name="getLpusForSpeciality" bindingOperationName="getLpusForSpeciality" type="Request-Response" outputName="getLpusForSpecialityResponse" inputName="getLpusForSpeciality" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6104de0d-5723-4167-99c2-7b573e995110" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getLpusForSpeciality>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <specialityId>?</specialityId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getLpusForSpeciality>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getLpusForSpeciality"/></con:call></con:operation><con:operation id="acf5cb39-257b-41b1-b43f-09a9482c977e" isOneWay="false" action="urn://getReferralsInfo" name="getReferralsInfo" bindingOperationName="getReferralsInfo" type="Request-Response" outputName="getReferralsInfoResponse" inputName="getReferralsInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ed1021ba-abed-4723-b006-2a01f150a216" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getReferralsInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <returnCompleted>false</returnCompleted>\r
         <!--Optional:-->\r
         <returnExtended>false</returnExtended>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getReferralsInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getReferralsInfo"/></con:call></con:operation><con:operation id="032fe0e1-ef4d-42a9-9957-a6d0b14d8eb6" isOneWay="false" action="urn://getSpecialitiesInfo" name="getSpecialitiesInfo" bindingOperationName="getSpecialitiesInfo" type="Request-Response" outputName="getSpecialitiesInfoResponse" inputName="getSpecialitiesInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3de6838f-805e-4342-ab60-898c0fd75e17" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:getSpecialitiesInfo>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <!--Optional:-->\r
         <quotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </quotaTypes>\r
         <!--Optional:-->\r
         <disableQuotaTypes>\r
            <!--1 or more repetitions:-->\r
            <quotaType>?</quotaType>\r
         </disableQuotaTypes>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:getSpecialitiesInfo>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/getSpecialitiesInfo"/></con:call></con:operation><con:operation id="8aa0d73b-4566-4617-b9ae-24fcf564546c" isOneWay="false" action="urn://shiftAppointment" name="shiftAppointment" bindingOperationName="shiftAppointment" type="Request-Response" outputName="shiftAppointmentResponse" inputName="shiftAppointment" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="616a379b-06b8-4b42-ae19-db6805c1b38a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://esbcamelvv.test.emias.mos.ru/proxy/selfappointmentorchestrator/orchestrator/v1S/ProxyService</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:v5="http://api.service.soap.emias.lanit.ru/v5/">\r
   <soap:Header/>\r
   <soap:Body>\r
      <v5:shiftAppointment>\r
         <omsNumber>?</omsNumber>\r
         <!--Optional:-->\r
         <omsSeries>?</omsSeries>\r
         <birthDate>?</birthDate>\r
         <availableResourceId>?</availableResourceId>\r
         <complexResourceId>?</complexResourceId>\r
         <startTime>?</startTime>\r
         <endTime>?</endTime>\r
         <!--You have a CHOICE of the next 2 items at this level-->\r
         <referralId>?</referralId>\r
         <receptionTypeId>?</receptionTypeId>\r
         <appointmentId>?</appointmentId>\r
         <externalSystemId>?</externalSystemId>\r
      </v5:shiftAppointment>\r
   </soap:Body>\r
</soap:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://impl.service.soap.emias.lanit.ru/v5/OrchestratorServicePT/shiftAppointment"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" id="a75b5ee0-4ade-48af-893e-a2020b9d5175" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://notification-emiasinfo1.dev-emias.emias.ru" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://notification-emiasinfo1.dev-emias.emias.ru</con:endpoint></con:endpoints><con:resource name="" path="" id="c531b62f-1986-4013-80b5-9b6eb05f0553"><con:settings/><con:parameters/><con:method name="1" id="05dcfa0f-00d4-4bf5-bcc5-b374f0ce40e9" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="0c53b64a-1095-4f97-b54a-8ef8ac4637b4" mediaType="application/json"><con:settings/><con:endpoint>http://notification-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="tmk" path="/api/v1/status/tmk" id="704e2e9d-52d0-490a-892c-34f49e6a4dc8"><con:settings/><con:parameters><con:parameter><con:name>patientId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>deviceGuid</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>appointmentId</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="a4e95eac-891a-4e59-9e50-1354c32e518e" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:tmk="http://notification-emiasinfo1.dev-emias.emias.ru/api/v1/status/tmk">tmk:Response</con:element></con:representation><con:request name="Request 1" id="d0966023-0c73-4203-a595-1e05ed092d35" mediaType="application/json"><con:settings/><con:endpoint>http://notification-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry><con:entry>appointmentId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="2d523415-f5a8-4c59-8a57-8f66bbc8e3f1" name="PUT putArchiveAppointment"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b4202758-74c3-4ba9-a514-64aac3f19edc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Переданы валидные данные и записи нет в бд" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификатор пациента и омс" id="d004bcbe-e7b0-4e1f-8ed7-a68d7662f068"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
userid=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")

if(userid==0){
	userid= sql.firstRow("select max(id) as userid from f_user").userid
userid=userid+1
}
log.info userid
testRunner.testCase.setPropertyValue("userid1", userid.toString())

// найти несуществубщий омс пациента
def row =sql.firstRow("select policy_number as oms from f_user order  by policy_number desc")
def oms= row?.oms ?: 'null'

if (oms =='null'){
    int min =7000000000000000
    int max = 7999999999999999

    Random random = new Random()
  long generated_oms= random.nextLong(max+1-min)+ min
    oms =generated_oms.toString()
    log.info oms
}
else{
oms=oms+"1"
log.info oms
}
testRunner.testCase.setPropertyValue("oms1", oms)

// найти несуществубщий patientid
patientId= sql.firstRow("select max(patient_id) as patientId from f_user").patientId
patientId=patientId+1
patientIdStr = patientId.toString()
testRunner.testCase.setPropertyValue("patientId1", patientIdStr)

def row1 =sql.firstRow("select max(patient_id) as patientId from f_user")
def patientId= row1?.patientId ?: 'null'

if (patientId =='null'){
    int min =10000
    int max = 10000

    Random random = new Random()
  int generated_patientId= random.nextInt(max+1-min)+ min
    patientId =generated_patientId.toString()
    log.info patientId
}
else{
patientId=patientId+"1"
log.info patientId
}
testRunner.testCase.setPropertyValue("patientId1", patientId)

// добавить дату рождения в проперти
testRunner.testCase.setPropertyValue("birthDate1", '1940-11-24')</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификатор записи" id="7ff18dad-d225-4cfa-b03c-fbab3b65b8cf"><con:settings/><con:config><script>
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")


Appointmentid=sql.firstRow("select max(appointment_id) as id from f_deleted_archive_appointment").id
Appointmentid=Appointmentid+"1"
testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid)


def row =sql.firstRow("select max(appointment_id) as Appointmentid from f_deleted_archive_appointment")
def Appointmentid= row?.Appointmentid?: 'null'

if (Appointmentid =='null'){
    int min =3900000
    int max = 4000000

    Random random = new Random()
  int generated_Appointmentid= random.nextInt(max+1-min)+ min
    Appointmentid =generated_Appointmentid.toString()
    log.info Appointmentid
}
else{
Appointmentid=Appointmentid+"1"
log.info Appointmentid
}
testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid)</script></con:config></con:testStep><con:testStep type="jdbc" name="Добавление пациента в БД" id="9c815492-37be-4fa2-b22d-a21eb974085d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, policy_number, birth_date)
VALUES(${#TestCase#userid1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '${#TestCase#birthDate1}');</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="4ce4cc89-e9bf-4565-be48-8b3e3b54732c" name="JDBC Status"/><con:assertion type="Simple Contains" id="c5009cd2-a496-40ee-9cbe-6dd5434a1aa0" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Обновление моков" id="045e022e-8d87-4e8e-ae05-e1895bb7bb88"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection_mock}</con:connectionString><con:query>update template_response set "response" = '{"permissions": [
    {
      "name": "Илья Васильевич Ч.",
      "emiasId": 23697492,
      "policyNum": "${#TestCase#oms1}",
      "birthday": "2013-09-04",
      "permissionType": "CHILD",
      "ehrId": "555fcbfd-62b5-40a4-822c-a03defd32162",
      "gender": "MALE"
    }
  ],
  "phoneNum": "79265209207"
}'
where "path" = '/mock/Styazhkin/25122027/internal/3/emc-permissions?ssoId=af3e4ac5-96dd-4167-afb3-244eb7187aba';</con:query><con:assertion type="Simple Contains" id="bf74b236-6181-4df9-b63c-098dbebeae42" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JDBC Status" id="063762b0-9a36-4e0b-ae5c-9aa96401f673" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Проверка наличия данных в БД до выполнения скрипта" id="5d2f93cd-4767-4ec9-8e31-7171536ec17c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>Select * from f_deleted_archive_appointment
Where appointment_id=${#TestCase#Appointmentid} 
AND oms_number='${#TestCase#oms1}'
AND birth_date='${#TestCase#birthDate1}'</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="c019d625-b73f-482e-b317-ad912255395a" name="JDBC Status"/><con:assertion type="Simple Contains" id="eafc98e4-67a4-4581-bed6-10fe44cf7748" name="Contains"><con:configuration><token>&lt;Results>
    &lt;ResultSet fetchSize="0"/>
&lt;/Results>
</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="archiveAppointment/delete" id="5b421353-30e8-42d4-ab6a-4e7e84f1ec4b"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v4/archiveAppointment/delete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="archiveAppointment/delete" id="c4635db7-22d7-4963-ad34-048040fd2e10" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo1.dev-emias.emias.ru/api/v4/archiveAppointment/delete</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b437e392-c7b7-4e72-a7c0-9564154abd48" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="appointmentId" value="${#TestCase#Appointmentid}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms1}"/>
  <con:entry key="Mock-lk" value="${#Project#mock}/mock/Styazhkin/25122027"/>
  <con:entry key="birthDate" value="${#TestCase#birthDate1}"/>
  <con:entry key="Mock-sudir" value="${#Project#mock}/mock/Styazhkin/25122027"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>X-Access-JWT</con:entry><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry><con:entry>appointmentId</con:entry><con:entry>Mock-sudir</con:entry><con:entry>Mock-lk</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверка внесения данных в таблицу f_deleted_archive_appointment" id="ec02b46f-524e-49b2-b968-f9812eafcaca"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>Select * from f_deleted_archive_appointment
Where appointment_id=${#TestCase#Appointmentid} 
AND oms_number='${#TestCase#oms1}'
AND birth_date='${#TestCase#birthDate1}'</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="GroovyScriptAssertion" id="742462ee-08d1-40f2-989b-9072415717d3" name="Script Assertion"><con:configuration><scriptText>// Импортируем необходимые классы
import com.eviware.soapui.support.XmlHolder

// Получаем ответ в виде строки
def response = messageExchange.responseContent

// Создаем XmlHolder для работы с XML
def holder = new XmlHolder(response)

// Проверяем ОМС
assert holder["//*:f_deleted_archive_appointment.oms_number"] == context.expand('${#TestCase#oms1}')

// Проверяем дату рождения
assert holder["//*:f_deleted_archive_appointment.birth_date"] == context.expand('${#TestCase#birthDate1}')

// Проверяем идентификатор записи
assert holder["//*:f_deleted_archive_appointment.appointment_id"] == context.expand('${#TestCase#Appointmentid}')</scriptText></con:configuration></con:assertion><con:assertion type="JDBC Status" id="2070c035-1b0b-46dc-af55-1f47aaca114b" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удалить пациента из БД" id="1a603553-86a0-4d7f-95db-2178baa89cb7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>delete from f_user where id=${#TestCase#userid1};
delete from f_deleted_archive_appointment where oms_number='${#TestCase#oms1}';</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="33edfbfc-c373-4f61-af0e-c5ce98e5fdbc" name="JDBC Status"/><con:assertion type="Simple Contains" id="f21c08c2-4db7-465d-b4bd-bad99fe64fdf" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="calltestcase" name="Создание записи" id="1c94ba00-c74d-45e1-97ee-297e542e621c" disabled="true"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>5da857a5-a3c7-44d8-9ffc-17a304aea924</con:targetTestCase><con:properties><con:property><con:name>complexResource</con:name></con:property><con:property><con:name>availableResources</con:name></con:property><con:property><con:name>receptionType</con:name></con:property><con:property><con:name>startTime</con:name></con:property><con:property><con:name>endTime</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Отмена записи" id="a22117ea-78a7-4acd-8401-10f4df771461" disabled="true"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>76929854-c233-4531-b8cf-4b0070bfc255</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties><con:property><con:name>patientId1</con:name><con:value>120001</con:value></con:property><con:property><con:name>oms1</con:name><con:value>770000000000001011</con:value></con:property><con:property><con:name>userid1</con:name><con:value>12</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1940-11-24</con:value></con:property><con:property><con:name>Appointmentid</con:name><con:value>39193032239531</con:value></con:property></con:properties></con:testCase><con:testCase id="d35b1c61-8024-4858-acb8-15eccf248ba6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Переданы валидные данные, но запись уже есть в таблице" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификатор пациента и омс" id="0838e9ba-5d8c-4646-93ea-cfd2915b9605"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
userid=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")

if(userid==0){
	userid= sql.firstRow("select max(id) as userid from f_user").userid
userid=userid+1
}
log.info userid
testRunner.testCase.setPropertyValue("userid1", userid.toString())
// найти несуществубщий омс пациента
def row =sql.firstRow("select policy_number as oms from f_user order  by policy_number desc")
def oms= row?.oms ?: 'null'

if (oms =='null'){
    int min =7000000000000000
    int max = 7999999999999999

    Random random = new Random()
  long generated_oms= random.nextLong(max+1-min)+ min
    oms =generated_oms.toString()
    log.info oms
}
else{
oms=oms+"1"
log.info oms
}
testRunner.testCase.setPropertyValue("oms1", oms)

// найти несуществубщий patientid
patientId= sql.firstRow("select max(patient_id) as patientId from f_user").patientId
patientId=patientId+1
patientIdStr = patientId.toString()
testRunner.testCase.setPropertyValue("patientId1", patientIdStr)

def row1 =sql.firstRow("select max(patient_id) as patientId from f_user")
def patientId= row1?.patientId ?: 'null'

if (patientId =='null'){
    int min =10000
    int max = 10000

    Random random = new Random()
  int generated_patientId= random.nextInt(max+1-min)+ min
    patientId =generated_patientId.toString()
    log.info patientId
}
else{
patientId=patientId+"1"
log.info patientId
}
testRunner.testCase.setPropertyValue("patientId1", patientId)

// добавить дату рождения в проперти
testRunner.testCase.setPropertyValue("birthDate1", '1940-11-24')

//Подбор идентификатора для 2-го пациента, у которого будет такой же Appointmentid

def userid2=userid+1
testRunner.testCase.setPropertyValue("userid2", userid2.toString())

//Подбор ОМС для пациента 2
def oms2=oms.toLong()+1
testRunner.testCase.setPropertyValue("oms2", oms2.toString())

//Добавление даты рождения для 2-го пациента
testRunner.testCase.setPropertyValue("birthDate2", '1941-11-24')

// Добавление id пациента 2-му пользователю
def patientid2=patientId.toInteger()+1
testRunner.testCase.setPropertyValue("patientid2", patientid2.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификатор записи" id="dd677f64-23d3-48d0-aeaf-b7309f6c2d5b"><con:settings/><con:config><script>
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def row =sql.firstRow("select min(appointment_id) as Appointmentid from f_deleted_archive_appointment")
def Appointmentid= row?.Appointmentid?: 'null'
log.info Appointmentid
if (Appointmentid =='null'){
    int min =3900000
    int max = 4000000

    Random random = new Random()
  int generated_Appointmentid= random.nextInt(max+1-min)+ min
    Appointmentid =generated_Appointmentid.toString()
    log.info Appointmentid
    testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
}
else{
testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
log.info Appointmentid
}

// подбор минимального идентификатора
def row1 =sql.firstRow("select min(id) as id from f_deleted_archive_appointment")
def fdaa_id= row1?.id?: 'null'
if (fdaa_id=='null'){
	fdaa_id=1
	testRunner.testCase.setPropertyValue("fdaa_id", fdaa_id.toString())
}
else{
	fdaa_id =sql.firstRow("select max(id) as id from f_deleted_archive_appointment").id
	fdaa_id+=1
	testRunner.testCase.setPropertyValue("fdaa_id", fdaa_id.toString())
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Добавление пациента в БД и записи в таблицу f_deleted_archive_appointment" id="b564d762-b10c-4f96-97f1-a85118392477"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>INSERT INTO f_user
(id, patient_id, policy_number, birth_date)
VALUES(${#TestCase#userid1}, ${#TestCase#patientId1}, '${#TestCase#oms1}', '${#TestCase#birthDate1}');

INSERT INTO f_user
(id, patient_id, policy_number, birth_date)
VALUES(${#TestCase#userid2}, ${#TestCase#patientId2}, '${#TestCase#oms2}', '${#TestCase#birthDate2}');

INSERT INTO f_deleted_archive_appointment
(id, appointment_id, oms_number, birth_date, delete_date)
VALUES(${#TestCase#fdaa_id},${#TestCase#Appointmentid},
'${#TestCase#oms2}','${#TestCase#birthDate2}','2025-01-01T15:14:38.555Z')



</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="5f66970a-90bb-4368-b7d4-ff27b2476f8b" name="JDBC Status"/><con:assertion type="Simple Contains" id="b4979e67-1e2a-44f0-84b9-68c9db80f219" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Обновление моков" id="f2d53ba8-4bad-480f-84a0-2429f9308131"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection_mock}</con:connectionString><con:query>update template_response set "response" = '{"permissions": [
    {
      "name": "Илья Васильевич Ч.",
      "emiasId": 23697492,
      "policyNum": "${#TestCase#oms1}",
      "birthday": "2013-09-04",
      "permissionType": "CHILD",
      "ehrId": "555fcbfd-62b5-40a4-822c-a03defd32162",
      "gender": "MALE"
    }
  ],
  "phoneNum": "79265209207"
}'
where "path" = '/mock/Styazhkin/25122027/internal/3/emc-permissions?ssoId=af3e4ac5-96dd-4167-afb3-244eb7187aba';</con:query><con:assertion type="Simple Contains" id="bf74b236-6181-4df9-b63c-098dbebeae42" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JDBC Status" id="063762b0-9a36-4e0b-ae5c-9aa96401f673" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Проверка внесения данных в таблицу f_deleted_archive_appointment" id="cf4f5896-be3b-4a07-a652-e2e1f2bd7844"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>Select * from f_deleted_archive_appointment
Where appointment_id=${#TestCase#Appointmentid} 
AND oms_number='${#TestCase#oms1}'
AND birth_date='${#TestCase#birthDate1}'</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="ddf86438-34d4-42de-b2d9-e338eba97791" name="JDBC Status"/><con:assertion type="Simple Contains" id="03304bbe-ffa2-492f-8daf-2bd2e920a1fb" name="Contains"><con:configuration><token>&lt;ResultSet fetchSize="0"/></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="archiveAppointment/delete" id="522687ef-026c-4a81-ba5e-0d9b02a4a10c"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v4/archiveAppointment/delete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="archiveAppointment/delete" id="c4635db7-22d7-4963-ad34-048040fd2e10" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo1.dev-emias.emias.ru/api/v4/archiveAppointment/delete</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b437e392-c7b7-4e72-a7c0-9564154abd48" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="appointmentId" value="${#TestCase#Appointmentid}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms1}"/>
  <con:entry key="Mock-lk" value="${#Project#mock}/mock/Styazhkin/25122027"/>
  <con:entry key="birthDate" value="${#TestCase#birthDate1}"/>
  <con:entry key="Mock-sudir" value="${#Project#mock}/mock/Styazhkin/25122027"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>X-Access-JWT</con:entry><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry><con:entry>appointmentId</con:entry><con:entry>Mock-sudir</con:entry><con:entry>Mock-lk</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Проверка внесения данных в таблицу f_deleted_archive_appointment после выполнения метода" id="ce6e9b05-7c50-4158-878f-7ceee4704470"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>Select * from f_deleted_archive_appointment
Where appointment_id=${#TestCase#Appointmentid} 
AND oms_number='${#TestCase#oms1}'
AND birth_date='${#TestCase#birthDate1}'</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="257f7349-ce99-4ab3-a025-d8fbf94924a1" name="JDBC Status"/><con:assertion type="GroovyScriptAssertion" id="b8230145-0919-4cb1-a20e-8d62898f854a" name="Script Assertion"><con:configuration><scriptText>// Импортируем необходимые классы
import com.eviware.soapui.support.XmlHolder

// Получаем ответ в виде строки
def response = messageExchange.responseContent

// Создаем XmlHolder для работы с XML
def holder = new XmlHolder(response)

// Проверяем ОМС
assert holder["//*:f_deleted_archive_appointment.oms_number"] == context.expand('${#TestCase#oms1}')

// Проверяем дату рождения
assert holder["//*:f_deleted_archive_appointment.birth_date"] == context.expand('${#TestCase#birthDate1}')

// Проверяем идентификатор записи
assert holder["//*:f_deleted_archive_appointment.appointment_id"] == context.expand('${#TestCase#Appointmentid}')</scriptText></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удаление данных из таблиц" id="ce6d2a1e-1906-47c0-9e84-258065d39a31"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>delete from f_user where id=${#TestCase#userid1};
delete from f_user where id=${#TestCase#userid2};
delete from f_deleted_archive_appointment where oms_number='${#TestCase#oms1}';
delete from f_deleted_archive_appointment where oms_number='${#TestCase#oms2}';</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="d90669ec-10fc-42bc-a5ea-0a68fcc47077" name="JDBC Status"/><con:assertion type="Simple Contains" id="a8955ba7-e6e2-4d10-a390-95907e2a7083" name="Contains"><con:configuration><token> &lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>userid1</con:name><con:value>12</con:value></con:property><con:property><con:name>oms1</con:name><con:value>770000000000001011</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>120001</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1940-11-24</con:value></con:property><con:property><con:name>Appointmentid</con:name><con:value>391930322272</con:value></con:property><con:property><con:name>userid2</con:name><con:value>13</con:value></con:property><con:property><con:name>oms2</con:name><con:value>770000000000001012</con:value></con:property><con:property><con:name>birthDate2</con:name><con:value>1941-11-24</con:value></con:property><con:property><con:name>patientid2</con:name><con:value>120002</con:value></con:property><con:property><con:name>fdaa_id</con:name><con:value>9</con:value></con:property></con:properties></con:testCase><con:testCase id="3047f151-71da-4804-ba2d-25a2e3f7bb40" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС 2. Запись удалена" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификатор пациента и омс" id="65f87fce-d373-4b1a-bff9-9215583bf028"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
userid=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")

if(userid==0){
	userid= sql.firstRow("select max(id) as userid from f_user").userid
userid=userid+1
}
log.info userid
testRunner.testCase.setPropertyValue("userid1", userid.toString())
// найти несуществубщий омс пациента
def row =sql.firstRow("select policy_number as oms from f_user order  by policy_number desc")
def oms= row?.oms ?: 'null'

if (oms =='null'){
    int min =7000000000000000
    int max = 7999999999999999

    Random random = new Random()
  long generated_oms= random.nextLong(max+1-min)+ min
    oms =generated_oms.toString()
    log.info oms
}
else{
oms=oms+"1"
log.info oms
}
testRunner.testCase.setPropertyValue("oms1", oms)

// найти несуществубщий patientid
patientId= sql.firstRow("select max(patient_id) as patientId from f_user").patientId
patientId=patientId+1
patientIdStr = patientId.toString()
testRunner.testCase.setPropertyValue("patientId1", patientIdStr)

def row1 =sql.firstRow("select max(patient_id) as patientId from f_user")
def patientId= row1?.patientId ?: 'null'

if (patientId =='null'){
    int min =10000
    int max = 10000

    Random random = new Random()
  int generated_patientId= random.nextInt(max+1-min)+ min
    patientId =generated_patientId.toString()
    log.info patientId
}
else{
patientId=patientId+"1"
log.info patientId
}
testRunner.testCase.setPropertyValue("patientId1", patientId)

// добавить дату рождения в проперти
testRunner.testCase.setPropertyValue("birthDate1", '1940-11-24')</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификатор записи" id="9f2ed3b0-1712-4618-bf4a-cec2e510806f"><con:settings/><con:config><script>
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def row =sql.firstRow("select min(appointment_id) as Appointmentid from f_deleted_archive_appointment")
def Appointmentid= row?.Appointmentid?: 'null'
log.info Appointmentid
if (Appointmentid =='null'){
    int min =3900000
    int max = 4000000

    Random random = new Random()
  int generated_Appointmentid= random.nextInt(max+1-min)+ min
    Appointmentid =generated_Appointmentid.toString()
    log.info Appointmentid
    testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
}
else{
testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
log.info Appointmentid
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Добавление записи в таблицу" id="c3808b7c-818d-43ac-9524-a0722fa6732c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>INSERT INTO f_deleted_archive_appointment
(id, appointment_id, oms_number, birth_date, delete_date)
VALUES(${#TestCase#userid1},${#TestCase#Appointmentid},
'${#TestCase#oms1}','${#TestCase#birthDate1}','2025-01-01T15:14:38.555Z')
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="0f1f083d-8d46-47f9-81e0-c83fe44e3fee" name="JDBC Status"/><con:assertion type="Simple Contains" id="f5d5b544-f2b1-4556-92eb-60e34d3cf53d" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="archiveAppointment/delete" id="ee7c39ad-56b1-49d1-84bc-455fd96adc82"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v4/archiveAppointment/delete" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="archiveAppointment/delete" id="c4635db7-22d7-4963-ad34-048040fd2e10" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request/><con:originalUri>http://application-emiasinfo1.dev-emias.emias.ru/api/v4/archiveAppointment/delete</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="37bdf059-12d6-41a8-b90a-1fc3ca7d495b" name="Valid HTTP Status Codes"><con:configuration><codes>409</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5e679412-09b7-49c1-9857-cb2eb21410b8" name="Script Assertion"><con:configuration><scriptText>// Парсим ответ в объект JsonSlurper
def response = new groovy.json.JsonSlurper().parseText(messageExchange.responseContent)

// Проверяем значение поля code
assert response.error.code == "APPOINTMENT_ALREADY_DELETED"

// Проверяем значение поля code
assert response.error.description == "Запись уже удалена"

// Проверяем значение поля code
assert response.error.type == "BUSINESS"</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="appointmentId" value="${#TestCase#Appointmentid}"/>
  <con:entry key="omsNumber" value="${#TestCase#oms1}"/>
  <con:entry key="Mock-lk" value="${#Project#mock}/mock/Styazhkin/25122027"/>
  <con:entry key="birthDate" value="${#TestCase#birthDate1}"/>
  <con:entry key="Mock-sudir" value="${#Project#mock}/mock/Styazhkin/25122027"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>X-Access-JWT</con:entry><con:entry>omsNumber</con:entry><con:entry>birthDate</con:entry><con:entry>appointmentId</con:entry><con:entry>Mock-sudir</con:entry><con:entry>Mock-lk</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удаление данных из таблиц" id="758e3d88-5aba-4bc7-a675-f9670c0b3855"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="false" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>delete from f_deleted_archive_appointment where oms_number='${#TestCase#oms1}';
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="d90669ec-10fc-42bc-a5ea-0a68fcc47077" name="JDBC Status"/><con:assertion type="Simple Contains" id="a8955ba7-e6e2-4d10-a390-95907e2a7083" name="Contains"><con:configuration><token> &lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Поиск записи в БД" id="0ee148b1-ccbe-4558-bf8d-7a838a91a04d" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>Select * from f_deleted_archive_appointment</con:query><con:storedProcedure>false</con:storedProcedure><con:properties/></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="080d6259-019f-43a5-86bf-78f11598c6b5" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>appointment</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Поиск записи в БД</con:sourceStep><con:sourcePath>//Row[1]//F_DELETED_ARCHIVE_APPOINTMENT.APPOINTMENT_ID</con:sourcePath><con:targetType>appointment</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>oms</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Поиск записи в БД</con:sourceStep><con:sourcePath>//Row[1]//F_DELETED_ARCHIVE_APPOINTMENT.OMS_NUMBER</con:sourcePath><con:targetType>oms</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>birthDate</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Поиск записи в БД</con:sourceStep><con:sourcePath>//Row[1]//F_DELETED_ARCHIVE_APPOINTMENT.BIRTH_DATE</con:sourcePath><con:targetType>birthDate</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>appointment</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>oms</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>birthDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userid1</con:name><con:value>12</con:value></con:property><con:property><con:name>oms1</con:name><con:value>770000000000001011</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>120001</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1940-11-24</con:value></con:property><con:property><con:name>Appointmentid</con:name><con:value>391930322272</con:value></con:property><con:property><con:name>id_fdaa</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase id="5da857a5-a3c7-44d8-9ffc-17a304aea924" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Создание записи" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="getSpecialitiesInfo" id="f343cf36-87fd-4483-9557-c7ca4dd804f0"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v6/saOrchestrator/getSpecialitiesInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getSpecialitiesInfo" id="65995e3c-4c6b-49f0-8ba1-88dbb5f9db3c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "birthDate": "${#TestSuite#birthDate1}",
  "omsNumber": "${#TestSuite#oms1}",
  "isChatBotEnabled": false
}</con:request><con:originalUri>http://application-emiasinfo1.dev-emias.emias.ru/api/v6/saOrchestrator/getSpecialitiesInfo</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="getAppointmentReceptionsByPatient" id="fc88170f-ae7b-4ce3-b05c-259a2813c924"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v8/saOrchestrator/getAppointmentReceptionsByPatient" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getAppointmentReceptionsByPatient" id="e48f6ccd-7d21-42fd-aadc-37a7be2d9f59" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "omsNumber": "${#TestSuite#oms1}",
  "birthDate": "${#TestSuite#birthDate1}"

  "signActiveArchive":0
}</con:request><con:originalUri>http://application-emiasinfo1.dev-emias.emias.ru/api/v8/saOrchestrator/getAppointmentReceptionsByPatient</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Access-JWT" value="${#Project#X-Access-JWT}"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>X-Access-JWT</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="getDoctorsInfo" id="364cd013-64a1-4c0d-bfe1-bbcf424e1cd1"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v4/saOrchestrator/getDoctorsInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getDoctorsInfo" id="2ae5bddd-dae6-405b-a6fb-8ed4793e4de3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "omsNumber": "${#TestSuite#oms1}",
  "birthDate": "${#TestSuite#birthDate1}",
  "specialityId": [
    8
  ]
}</con:request><con:originalUri>http://application-emiasinfo1.dev-emias.emias.ru/api/v4/saOrchestrator/getDoctorsInfo</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="34afb7c6-a9b0-4719-9fa1-b71bd9146f7d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>availableResources</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDoctorsInfo</con:sourceStep><con:sourcePath>$.payload.doctorsInfo[0].availableResources[0].id</con:sourcePath><con:targetType>availableResources</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>complexResource</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getDoctorsInfo</con:sourceStep><con:sourcePath>$.payload.doctorsInfo[0].availableResources[0].complexResource[0].</con:sourcePath><con:targetType>complexResource</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getAvailableResourceScheduleInfo" id="b6735668-2d18-433c-b0cc-6af8b84028ec"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v3/saOrchestrator/getAvailableResourceScheduleInfo" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getAvailableResourceScheduleInfo" id="02a7f31a-7fb6-42fb-9411-eb5bc9237dd7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "availableResourceId": ${#TestCase#availableResources},
  "complexResourceId": ${#TestCase#complexResource},
  "omsNumber": "${#TestSuite#oms1}",
  "birthDate": "${#TestSuite#birthDate1}"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="EI-Token" value="${#Project#sudirToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer1" id="d0964425-82c7-42e8-9dd0-eb3208680d86"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>receptionType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAvailableResourceScheduleInfo</con:sourceStep><con:sourcePath>$.payload.availableResource.receptionType[0].code</con:sourcePath><con:targetType>receptionType</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>startTime</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAvailableResourceScheduleInfo</con:sourceStep><con:sourcePath>$.payload.scheduleOfDay[0].scheduleBySlot[0].slot[3].startTime</con:sourcePath><con:targetType>startTime</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>endTime</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getAvailableResourceScheduleInfo</con:sourceStep><con:sourcePath>$.payload.scheduleOfDay[0].scheduleBySlot[0].slot[3].endTime</con:sourcePath><con:targetType>endTime</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="createAppointment" id="f6b2368e-765b-4c7c-84d7-1aaf27e7dea3"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v3/saOrchestrator/createAppointment" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAppointment" id="c9744bb2-1fd0-48ed-b4c6-c7be7e0f139b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "omsNumber": "${#TestSuite#oms1}",
  "birthDate": "${#TestSuite#birthDate1}",
  "availableResourceId": ${#TestCase#availableResources},
  "complexResourceId": ${#TestCase#complexResource},
  "startTime": "${#TestCase#startTime}",
  "endTime": "${#TestCase#endTime}",
  "receptionTypeId":${#TestCase#receptionType}
   
}</con:request><con:originalUri>http://application-emiasinfo1.dev-emias.emias.ru/api/v3/saOrchestrator/createAppointment</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer2" id="a92253ba-ddf6-47df-989a-0e4eb7596fb6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AppointmentID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createAppointment</con:sourceStep><con:sourcePath>$.payload.appointmentId</con:sourcePath><con:targetType>Appointmentid</con:targetType><con:targetStep>#TestSuite#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>complexResource</con:name><con:value/></con:property><con:property><con:name>availableResources</con:name><con:value/></con:property><con:property><con:name>receptionType</con:name><con:value/></con:property><con:property><con:name>startTime</con:name><con:value/></con:property><con:property><con:name>endTime</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="76929854-c233-4531-b8cf-4b0070bfc255" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Отмена записи" searchProperties="true" disabled="true"><con:settings/><con:testStep type="restrequest" name="cancelAppointment" id="f5193a5d-60d2-4cfa-8666-e1eac9969837"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v3/saOrchestrator/cancelAppointment" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="cancelAppointment" id="b3a1da00-751f-45db-bdf3-d276694f3986" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
  "birthDate": "${#TestSuite#birthDate1}",
  "omsNumber": "${#TestSuite#oms1}",
  "appointmentId": ${#TestSuite#Appointmentid}
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>patientId1</con:name><con:value>1</con:value></con:property><con:property><con:name>oms1</con:name><con:value>77000000000000101</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1940-11-24</con:value></con:property><con:property><con:name>userid1</con:name><con:value>11</con:value></con:property><con:property><con:name>Appointmentid</con:name><con:value>39193032239531</con:value></con:property></con:properties></con:testSuite><con:testSuite id="8e704534-2cef-48d3-b46c-79a1c138d44f" name="POST postArchiveAppointmentList"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="b45cdb46-7104-445b-80e1-4014cf31b735" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Переданы валидные данные, одна запись есть в БД" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификатор пациента и омс" id="5fccbe73-c03c-4840-ae18-14a8ee8104a7"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
userid=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")

if(userid==0){
	userid= sql.firstRow("select max(id) as userid from f_user").userid
userid=userid+1
}
log.info userid
testRunner.testCase.setPropertyValue("userid1", userid.toString())
// найти несуществубщий омс пациента
def row =sql.firstRow("select policy_number as oms from f_user order  by policy_number desc")
def oms= row?.oms ?: 'null'

if (oms =='null'){
    int min =7000000000000000
    int max = 7999999999999999

    Random random = new Random()
  long generated_oms= random.nextLong(max+1-min)+ min
    oms =generated_oms.toString()
    log.info oms
}
else{
oms=oms+"1"
log.info oms
}
testRunner.testCase.setPropertyValue("oms1", oms)

// найти несуществубщий patientid
patientId= sql.firstRow("select max(patient_id) as patientId from f_user").patientId
patientId=patientId+1
patientIdStr = patientId.toString()
testRunner.testCase.setPropertyValue("patientId1", patientIdStr)

def row1 =sql.firstRow("select max(patient_id) as patientId from f_user")
def patientId= row1?.patientId ?: 'null'

if (patientId =='null'){
    int min =10000
    int max = 10000

    Random random = new Random()
  int generated_patientId= random.nextInt(max+1-min)+ min
    patientId =generated_patientId.toString()
    log.info patientId
}
else{
patientId=patientId+"1"
log.info patientId
}
testRunner.testCase.setPropertyValue("patientId1", patientId)

// добавить дату рождения в проперти
testRunner.testCase.setPropertyValue("birthDate1", '1940-11-24')</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификатор записи" id="a570cdde-15f7-4bd0-8a9a-284229c7ca11"><con:settings/><con:config><script>
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def row =sql.firstRow("select min(appointment_id) as Appointmentid from f_deleted_archive_appointment")
def Appointmentid= row?.Appointmentid?: 'null'
log.info Appointmentid
if (Appointmentid =='null'){
    int min =3900000
    int max = 4000000

    Random random = new Random()
  int generated_Appointmentid= random.nextInt(max+1-min)+ min
    Appointmentid =generated_Appointmentid.toString()
    log.info Appointmentid
    testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
}
else{
testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
log.info Appointmentid
}

// подбор минимального идентификатора
def row1 =sql.firstRow("select min(id) as id from f_deleted_archive_appointment")
def fdaa_id= row1?.id?: 'null'
if (fdaa_id=='null'){
	fdaa_id=1
	testRunner.testCase.setPropertyValue("fdaa_id", fdaa_id.toString())
}
else{
	fdaa_id =sql.firstRow("select max(id) as id from f_deleted_archive_appointment").id
	fdaa_id+=1
	testRunner.testCase.setPropertyValue("fdaa_id", fdaa_id.toString())
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Обновление моков (токены ЛК и СУДИР)" id="9e3fb6a5-0f30-4606-91ce-c8110543f17c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection_mock}</con:connectionString><con:query>update template_response set "response" = '{"permissions": [
    {
      "name": "Илья Васильевич Ч.",
      "emiasId": 23697492,
      "policyNum": "${#TestCase#oms1}",
      "birthday": "2013-09-04",
      "permissionType": "CHILD",
      "ehrId": "555fcbfd-62b5-40a4-822c-a03defd32162",
      "gender": "MALE"
    }
  ],
  "phoneNum": "79265209207"
}'
where "path" = '/mock/Styazhkin/25122027/internal/3/emc-permissions?ssoId=af3e4ac5-96dd-4167-afb3-244eb7187aba';</con:query><con:assertion type="Simple Contains" id="bf74b236-6181-4df9-b63c-098dbebeae42" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JDBC Status" id="063762b0-9a36-4e0b-ae5c-9aa96401f673" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Добавление пациента в БД и записи в таблицу f_deleted_archive_appointment" id="d24c852a-85b8-49f7-a763-903d7bedf21d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>INSERT INTO f_deleted_archive_appointment
(id, appointment_id, oms_number, birth_date, delete_date)
VALUES(${#TestCase#fdaa_id},${#TestCase#Appointmentid_from_Orchestrator},
'${#TestCase#oms_from_Orchestrator}','${#TestCase#birthDate_from_Orchestrator}','2025-01-01T15:14:38.555Z')



</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="5f66970a-90bb-4368-b7d4-ff27b2476f8b" name="JDBC Status"/><con:assertion type="Simple Contains" id="b4979e67-1e2a-44f0-84b9-68c9db80f219" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="archiveAppointment/list" id="dfd17738-9cd6-451b-aaa5-cd4125e1b318"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v5/archiveAppointment/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="archiveAppointment/list" id="c3016729-fb60-4a4e-97ea-2f3c1328ef40" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
 	"omsNumber": "${#TestCase#oms1}",
 	"birthDate": "${#TestCase#birthDate1}",
 	  "pagingOptions": {
    "pageNumber": 0,
    "pageSize": 25
  }
}
</con:request><con:originalUri>http://application-eim-emiasinfo2.dev-emias.emias.ru/api/v5/archiveAppointment/list</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b794602c-4cc8-469d-9c5e-929a89aeabdd" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4fab358c-f210-41f3-afc9-7dde03b2c5a7" name="Script Assertion"><con:configuration><scriptText>// Парсим ответ в объект JsonSlurper
def response = new groovy.json.JsonSlurper().parseText(messageExchange.responseContent)

// Проверяем значение поля appointmentList
assert response.payload.appointmentList[0].id ==391930642126

// Проверяем значение поля TMK
assert response.payload.appointmentList[0].isTmk ==true

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-saOrchestrator" value="${#Project#mock}/mock/Styazhkin/25122035"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="Mock-lk" value="${#Project#mock}/mock/Styazhkin/25122027"/>
  <con:entry key="Mock-sudir" value="${#Project#mock}/mock/Styazhkin/25122027"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>Mock-sudir</con:entry><con:entry>Mock-lk</con:entry><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удаление данных из таблиц" id="f1479d08-7e9b-4789-bceb-3e355a8e1a3d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>delete from f_deleted_archive_appointment where oms_number='${#TestCase#oms_from_Orchestrator}';
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="5f66970a-90bb-4368-b7d4-ff27b2476f8b" name="JDBC Status"/><con:assertion type="Simple Contains" id="b4979e67-1e2a-44f0-84b9-68c9db80f219" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>userid1</con:name><con:value>12</con:value></con:property><con:property><con:name>oms1</con:name><con:value>770000000000001011</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>120001</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1940-11-24</con:value></con:property><con:property><con:name>Appointmentid</con:name><con:value>391930322272</con:value></con:property><con:property><con:name>fdaa_id</con:name><con:value>9</con:value></con:property><con:property><con:name>Appointmentid_from_Orchestrator</con:name><con:value>391930642134</con:value></con:property><con:property><con:name>oms_from_Orchestrator</con:name><con:value>${#TestCase#oms1}</con:value></con:property><con:property><con:name>birthDate_from_Orchestrator</con:name><con:value>${#TestCase#birthDate1}</con:value></con:property></con:properties></con:testCase><con:testCase id="04de0e8a-9bb7-4239-b3af-26c9d0cb7518" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Переданы валидные данные, в БД данных нет, вернулось 2 записи" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификатор пациента и омс" id="ac2eb12d-ac27-4b18-a5f9-ed13b540b3f1"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
userid=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")

if(userid==0){
	userid= sql.firstRow("select max(id) as userid from f_user").userid
userid=userid+1
}
log.info userid
testRunner.testCase.setPropertyValue("userid1", userid.toString())
// найти несуществубщий омс пациента
def row =sql.firstRow("select policy_number as oms from f_user order  by policy_number desc")
def oms= row?.oms ?: 'null'

if (oms =='null'){
    int min =7000000000000000
    int max = 7999999999999999

    Random random = new Random()
  long generated_oms= random.nextLong(max+1-min)+ min
    oms =generated_oms.toString()
    log.info oms
}
else{
oms=oms+"1"
log.info oms
}
testRunner.testCase.setPropertyValue("oms1", oms)

// найти несуществубщий patientid
patientId= sql.firstRow("select max(patient_id) as patientId from f_user").patientId
patientId=patientId+1
patientIdStr = patientId.toString()
testRunner.testCase.setPropertyValue("patientId1", patientIdStr)

def row1 =sql.firstRow("select max(patient_id) as patientId from f_user")
def patientId= row1?.patientId ?: 'null'

if (patientId =='null'){
    int min =10000
    int max = 10000

    Random random = new Random()
  int generated_patientId= random.nextInt(max+1-min)+ min
    patientId =generated_patientId.toString()
    log.info patientId
}
else{
patientId=patientId+"1"
log.info patientId
}
testRunner.testCase.setPropertyValue("patientId1", patientId)

// добавить дату рождения в проперти
testRunner.testCase.setPropertyValue("birthDate1", '1940-11-24')</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификатор записи" id="515e4371-1165-4d97-9371-b62d10166113"><con:settings/><con:config><script>
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def row =sql.firstRow("select min(appointment_id) as Appointmentid from f_deleted_archive_appointment")
def Appointmentid= row?.Appointmentid?: 'null'
log.info Appointmentid
if (Appointmentid =='null'){
    int min =3900000
    int max = 4000000

    Random random = new Random()
  int generated_Appointmentid= random.nextInt(max+1-min)+ min
    Appointmentid =generated_Appointmentid.toString()
    log.info Appointmentid
    testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
}
else{
testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
log.info Appointmentid
}

// подбор минимального идентификатора
def row1 =sql.firstRow("select min(id) as id from f_deleted_archive_appointment")
def fdaa_id= row1?.id?: 'null'
if (fdaa_id=='null'){
	fdaa_id=1
	testRunner.testCase.setPropertyValue("fdaa_id", fdaa_id.toString())
}
else{
	fdaa_id =sql.firstRow("select max(id) as id from f_deleted_archive_appointment").id
	fdaa_id+=1
	testRunner.testCase.setPropertyValue("fdaa_id", fdaa_id.toString())
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Обновление моков (токены ЛК и СУДИР)" id="c50df52b-1803-4488-bcff-39fd4527b62f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection_mock}</con:connectionString><con:query>update template_response set "response" = '{"permissions": [
    {
      "name": "Илья Васильевич Ч.",
      "emiasId": 23697492,
      "policyNum": "${#TestCase#oms1}",
      "birthday": "2013-09-04",
      "permissionType": "CHILD",
      "ehrId": "555fcbfd-62b5-40a4-822c-a03defd32162",
      "gender": "MALE"
    }
  ],
  "phoneNum": "79265209207"
}'
where "path" = '/mock/Styazhkin/25122027/internal/3/emc-permissions?ssoId=af3e4ac5-96dd-4167-afb3-244eb7187aba';</con:query><con:assertion type="Simple Contains" id="bf74b236-6181-4df9-b63c-098dbebeae42" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JDBC Status" id="063762b0-9a36-4e0b-ae5c-9aa96401f673" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Удаление данных из таблицы f_deleted_archive_appointment при наличии" id="0d997360-26f7-420d-aaed-d9c552ea5389"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection}</con:connectionString><con:query>delete from f_deleted_archive_appointment where oms_number='${#TestCase#oms_from_Orchestrator}';
</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status" id="5f66970a-90bb-4368-b7d4-ff27b2476f8b" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="archiveAppointment/list" id="975d21ec-b7bf-4caf-b420-7342015f1425"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v5/archiveAppointment/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="archiveAppointment/list" id="c3016729-fb60-4a4e-97ea-2f3c1328ef40" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
 	"omsNumber": "${#TestCase#oms1}",
 	"birthDate": "${#TestCase#birthDate1}",
 	  "pagingOptions": {
    "pageNumber": 0,
    "pageSize": 25
  }
}
</con:request><con:originalUri>http://application-eim-emiasinfo2.dev-emias.emias.ru/api/v5/archiveAppointment/list</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b794602c-4cc8-469d-9c5e-929a89aeabdd" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4fab358c-f210-41f3-afc9-7dde03b2c5a7" name="Script Assertion"><con:configuration><scriptText>// Парсим ответ в объект JsonSlurper
def response = new groovy.json.JsonSlurper().parseText(messageExchange.responseContent)

// Проверяем значение поля isTmk для первого объекта
assert response.payload.appointmentList[0].isTmk ==null

// Проверяем значение поля isTmk для второго объекта
assert response.payload.appointmentList[1].isTmk ==true

// Проверяем значение поля id для первого объекта
assert response.payload.appointmentList[0].id ==391930642016

// Проверяем значение поля id для второго объекта
assert response.payload.appointmentList[1].id ==391930642167</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-saOrchestrator" value="${#Project#mock}/mock/Styazhkin/25122037"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="Mock-lk" value="${#Project#mock}/mock/Styazhkin/25122027"/>
  <con:entry key="Mock-sudir" value="${#Project#mock}/mock/Styazhkin/25122027"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>Mock-sudir</con:entry><con:entry>Mock-lk</con:entry><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>userid1</con:name><con:value>12</con:value></con:property><con:property><con:name>oms1</con:name><con:value>770000000000001011</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>120001</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1940-11-24</con:value></con:property><con:property><con:name>Appointmentid</con:name><con:value>391930322272</con:value></con:property><con:property><con:name>fdaa_id</con:name><con:value>9</con:value></con:property></con:properties></con:testCase><con:testCase id="a693130e-7902-4f8f-887b-674e31c500e0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="АС. ACCESS_DENIED" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификатор пациента и омс" id="c05d688c-0ba3-4c99-af08-22fe7f51a24c"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoAPPDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
userid=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")

if(userid==0){
	userid= sql.firstRow("select max(id) as userid from f_user").userid
userid=userid+1
}
log.info userid
testRunner.testCase.setPropertyValue("userid1", userid.toString())
// найти несуществубщий омс пациента
def row =sql.firstRow("select policy_number as oms from f_user order  by policy_number desc")
def oms= row?.oms ?: 'null'

if (oms =='null'){
    int min =7000000000000000
    int max = 7999999999999999

    Random random = new Random()
  long generated_oms= random.nextLong(max+1-min)+ min
    oms =generated_oms.toString()
    log.info oms
}
else{
oms=oms+"1"
log.info oms
}
testRunner.testCase.setPropertyValue("oms1", oms)

// найти несуществубщий patientid
patientId= sql.firstRow("select max(patient_id) as patientId from f_user").patientId
patientId=patientId+1
patientIdStr = patientId.toString()
testRunner.testCase.setPropertyValue("patientId1", patientIdStr)

def row1 =sql.firstRow("select max(patient_id) as patientId from f_user")
def patientId= row1?.patientId ?: 'null'

if (patientId =='null'){
    int min =10000
    int max = 10000

    Random random = new Random()
  int generated_patientId= random.nextInt(max+1-min)+ min
    patientId =generated_patientId.toString()
    log.info patientId
}
else{
patientId=patientId+"1"
log.info patientId
}
testRunner.testCase.setPropertyValue("patientId1", patientId)

// добавить дату рождения в проперти
testRunner.testCase.setPropertyValue("birthDate1", '1940-11-24')</script></con:config></con:testStep><con:testStep type="jdbc" name="Обновление моков (токены ЛК и СУДИР)" id="81c9c061-f125-402c-b4cf-2bce195c4220"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoAPP_Full_DB_Connection_mock}</con:connectionString><con:query>update template_response set "response" = '{"permissions": [
    {
      "name": "Илья Васильевич Ч.",
      "emiasId": 23697492,
      "policyNum": "7700007178231039",
      "birthday": "2013-09-04",
      "permissionType": "CHILD",
      "ehrId": "555fcbfd-62b5-40a4-822c-a03defd32162",
      "gender": "MALE"
    }
  ],
  "phoneNum": "79265209207"
}'
where "path" = '/mock/Styazhkin/25122027/internal/3/emc-permissions?ssoId=af3e4ac5-96dd-4167-afb3-244eb7187aba';</con:query><con:assertion type="Simple Contains" id="bf74b236-6181-4df9-b63c-098dbebeae42" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JDBC Status" id="063762b0-9a36-4e0b-ae5c-9aa96401f673" name="JDBC Status"/><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="archiveAppointment/list" id="4d472395-6769-42a6-a6ae-80b9fa73d9f9"><con:settings/><con:config service="http://application-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v5/archiveAppointment/list" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="archiveAppointment/list" id="c3016729-fb60-4a4e-97ea-2f3c1328ef40" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://application-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request>{
 	"omsNumber": "${#TestCase#oms1}",
 	"birthDate": "${#TestCase#birthDate1}",
 	  "pagingOptions": {
    "pageNumber": 0,
    "pageSize": 25
  }
}
</con:request><con:originalUri>http://application-eim-emiasinfo2.dev-emias.emias.ru/api/v5/archiveAppointment/list</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b794602c-4cc8-469d-9c5e-929a89aeabdd" name="Valid HTTP Status Codes"><con:configuration><codes>403</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4fab358c-f210-41f3-afc9-7dde03b2c5a7" name="Script Assertion"><con:configuration><scriptText>// Парсим ответ в объект JsonSlurper
def response = new groovy.json.JsonSlurper().parseText(messageExchange.responseContent)

// Проверяем значение поля code
assert response.error.code =="ACCESS_DENIED"

// Проверяем значение поля description
assert response.error.description =="Доступ к запрошенной медкарте отсутствует"

// Проверяем значение поля type
assert response.error.type =="BUSINESS"

// Проверяем значение поля origin
assert response.error.origin =="ACCESS_DENIED"
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Mock-saOrchestrator" value="${#Project#mock}/mock/Styazhkin/25122037"/>
  <con:entry key="EI-Token" value="${#Project#sudirToken}"/>
  <con:entry key="Mock-lk" value="${#Project#mock}/mock/Styazhkin/25122027"/>
  <con:entry key="Mock-sudir" value="${#Project#mock}/mock/Styazhkin/25122027"/>
</con:parameters><con:parameterOrder><con:entry>EI-Token</con:entry><con:entry>Mock-sudir</con:entry><con:entry>Mock-lk</con:entry><con:entry>Mock-saOrchestrator</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>userid1</con:name><con:value>12</con:value></con:property><con:property><con:name>oms1</con:name><con:value>770000000000001011</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>120001</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1940-11-24</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="e3acdd3e-5a68-4730-9f7b-7cecf8ecbee1" name="GET tmk"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="783799c7-bcb1-499c-a715-447a2fd3d0a2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ОС. Переданы валидные данные, есть записи со всеми статусами" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Подобрать идентификатор пациента и омс" id="ddd2dc51-e333-4a51-a62b-e6670a2f331a"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

//метод, который подбирает несуществующий идентификатор в бд
def getNonexistenceIdInRange(String initialIdPropertyName, String lastIdPropertyName, String limitPropertyName, String table, String columnName){
	def initialId=testRunner.testCase.testSuite.project.getPropertyValue(initialIdPropertyName)
	def lastId=testRunner.testCase.testSuite.project.getPropertyValue(lastIdPropertyName)
	def limit=testRunner.testCase.testSuite.project.getPropertyValue(limitPropertyName)
	long id
	query="select "+columnName+" as id from "+table+" where "+columnName+" >"+initialId+" and "+columnName+" &lt;"+lastId+" order by "+columnName+"  limit "+limit+" "
	log.info query
	result=sql.rows(query)
	log.info "сделали запрос"
	for(int i=0; i&lt;result.size(); i++){
		log.info "вошли в цикл"
		if(result[i+1].ID.toInteger()!= result[i].ID.toInteger()+1){
			log.info "вошли в иф"
			//log.info 'i ='+i+ 'patients  '+patients[i].ID
			id=result[i].ID.toInteger()+1
			break
		} 
	}
	return id
}

// найти несуществубщий идентификатор пациента
userid=getNonexistenceIdInRange("initialPatientId","lastPatientId","limitPatient","f_user","patient_id")

if(userid==0){
	userid= sql.firstRow("select max(id) as userid from f_user").userid
userid=userid+1
}
log.info userid
testRunner.testCase.setPropertyValue("userid1", userid.toString())
// найти несуществубщий омс пациента
def row =sql.firstRow("select min(oms_number) as oms from f_user")
def oms= row?.oms ?: 'null'

if (oms =='null'){
    int min =7000000000000000
    int max = 7999999999999999

    Random random = new Random()
  long generated_oms= random.nextLong(max+1-min)+ min
    oms =generated_oms.toString()
    log.info oms
}
else{
oms=((oms.toLong()+1)*2)*2
log.info oms
}
testRunner.testCase.setPropertyValue("oms1", oms.toString())

// найти несуществубщий patientid
patientId= sql.firstRow("select max(patient_id) as patientId from f_user").patientId
patientId=patientId+1
patientIdStr = patientId.toString()
testRunner.testCase.setPropertyValue("patientId1", patientIdStr)

def row1 =sql.firstRow("select max(patient_id) as patientId from f_user")
def patientId= row1?.patientId ?: 'null'

if (patientId =='null'){
    int min =10000
    int max = 10000

    Random random = new Random()
  int generated_patientId= random.nextInt(max+1-min)+ min
    patientId =generated_patientId.toString()
    log.info patientId
}
else{
patientId=patientId+"1"
log.info patientId
}
testRunner.testCase.setPropertyValue("patientId1", patientId)

// добавить дату рождения в проперти
testRunner.testCase.setPropertyValue("birthDate1", '1940-11-24')

//Подбор идентификатора для 2-го пациента, у которого будет такой же Appointmentid

def userid2=userid+1
testRunner.testCase.setPropertyValue("userid2", userid2.toString())

//Подбор ОМС для пациента 2
def oms2=oms.toLong()+1
testRunner.testCase.setPropertyValue("oms2", oms2.toString())

//Добавление даты рождения для 2-го пациента
testRunner.testCase.setPropertyValue("birthDate2", '1941-11-24')

// Добавление id пациента 2-му пользователю
def patientid2=patientId.toLong()+1
testRunner.testCase.setPropertyValue("patientid2", patientid2.toString())</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать данные о устрействе пациента" id="cc07f9da-69c2-4468-a007-1d395ce235ff"><con:settings/><con:config><script>import java.time.*
import java.time.format.*;
import java.time.temporal.*;
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")


//получить несуществующий id в таблице девайсов
deviceId=sql.firstRow("select max(id)+1 as id from f_user_device").id
log.info deviceId
//для количества юзеров из пропертей записать девайс айди с индексом + генерировать гуид девайса и тоже записывть

	testRunner.testCase.setPropertyValue("deviceId1", deviceId.toString())
	uuid=java.util.UUID.randomUUID()
	testRunner.testCase.setPropertyValue("device_guid1", uuid.toString())


</script></con:config></con:testStep><con:testStep type="groovy" name="Подобрать идентификатор записи" id="89b84dfe-5b61-41c8-8750-4932a4b9af0e"><con:settings/><con:config><script>
import groovy.sql.Sql

def login = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbLogin_dev1")
def password = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbPassword_dev1")
def dbconstring = testRunner.testCase.testSuite.project.getPropertyValue("emiasInfoNotificationDbConnection_dev1")
// создать подключение к бд
sql = Sql.newInstance("jdbc:postgresql://" + dbconstring + "?user=" + login + "&amp;password=" + password, "org.postgresql.Driver")

def row =sql.firstRow("select max(appointment_id) as Appointmentid from f_notification_telemedicine")
def Appointmentid= row?.Appointmentid?: 'null'
log.info Appointmentid
if (Appointmentid =='null'){
    int min =3900000
    int max = 4000000

    Random random = new Random()
  int generated_Appointmentid= random.nextInt(max+1-min)+ min
    Appointmentid =generated_Appointmentid.toString()
    log.info Appointmentid
    testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
}
else{
Appointmentid=Appointmentid.toLong()+1	
testRunner.testCase.setPropertyValue("Appointmentid", Appointmentid.toString())
log.info Appointmentid
}

// подбор идентификатора в таблице
def row1 =sql.firstRow("select min(id) as id from  f_notification_telemedicine")
def fnt_id= row1?.id?: 'null'
for(int j=1;j&lt;6;j++){
if (fnt_id=='null'){
	fnt_id=1
	testRunner.testCase.setPropertyValue("fnt_id", fnt_id.toString())
}
else{
	fnt_id =sql.firstRow("select max(id) as id from  f_notification_telemedicine").id
	fnt_id=fnt_id.toInteger()+j
	testRunner.testCase.setPropertyValue("fnt_id"+j, fnt_id.toString())
}
}
// подбор id notification в таблице
def row2 =sql.firstRow("select min(notification_id) as nid from  f_notification_telemedicine")
def fnt_n_id= row2?.nid?: 'null'
if (fnt_n_id=='null'){
	fnt_n_id=1
	testRunner.testCase.setPropertyValue("fnt_n_id", fnt_n_id.toString())
}
else{
	fnt_n_id =sql.firstRow("select max(notification_id) as nid from  f_notification_telemedicine").nid
	fnt_n_id=fnt_n_id.toInteger()+1
	testRunner.testCase.setPropertyValue("fnt_n_id", fnt_n_id.toString())
}

//подбор дат для таблицы f_notification_telemedicine
for(int i=1;i&lt;6;i++){
def date ="2025-01-"+i+"T15:14:38.555Z"
testRunner.testCase.setPropertyValue("date"+i,date.toString())
}

</script></con:config></con:testStep><con:testStep type="jdbc" name="Записать данные о пациенте в БД" id="9657105c-6fdc-47ac-9c65-ee8af77201af"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoAPPDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotification_Full_DB_Connection}</con:connectionString><con:query>INSERT INTO f_user
(id,patient_id,oms_number,birth_date)
VALUES (${#TestCase#userid1},${#TestCase#patientId1},'${#TestCase#oms1}', '${#TestCase#birthDate1}')</con:query><con:assertion type="JDBC Status" id="187d4f97-422d-4bb1-9791-4880f0e33292" name="JDBC Status"/><con:assertion type="Simple Contains" id="5192186a-a0d4-4175-9459-832c09407758" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Записать данные о девайсе пацинета в БД" id="90c3b675-77b1-4e45-952b-c71ba636b772"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotification_Full_DB_Connection}</con:connectionString><con:query>insert into f_device
(device_guid,app_version, platform,device_cloud_id,cloud_token_delete)
VALUES ('${#TestCase#device_guid1}', '7.0.0','ANDROID','device_cloud_id','false');

INSERT INTO f_user_device
(id,device_guid,user_id,authentication,deleted,deleted_date,main_policy,esia_authentication,voip)
VALUES (${#TestCase#deviceId1},'${#TestCase#device_guid1}',${#TestCase#userId1}, 'true','false',NULL,'true','true','true')</con:query><con:assertion type="JDBC Status" id="b1965a15-6f29-47c0-9762-21bbbb94c56d" name="JDBC Status"/><con:assertion type="Simple Contains" id="e9b80167-c483-4764-b83a-7e2af8e5322e" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Записать данные о телемедецинской консультации в БД" id="23b8cd26-0238-4a12-9ae9-3da76436a745"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotification_Full_DB_Connection}</con:connectionString><con:query>INSERT INTO f_notification_telemedicine
(id,notification_id,appointment_id,event_type,event_date_time,unsuccess_call_counter)
VALUES (${#TestCase#fnt_id1},${#TestCase#fnt_n_id},${#TestCase#Appointmentid},'doctorLoginToRoom','${#TestCase#date1}',0);

INSERT INTO f_notification_telemedicine
(id,notification_id,appointment_id,event_type,event_date_time,unsuccess_call_counter)
VALUES (${#TestCase#fnt_id2},${#TestCase#fnt_n_id},${#TestCase#Appointmentid},'doctorStartCall','${#TestCase#date2}',0);

INSERT INTO f_notification_telemedicine
(id,notification_id,appointment_id,event_type,event_date_time,unsuccess_call_counter)
VALUES (${#TestCase#fnt_id3},${#TestCase#fnt_n_id},${#TestCase#Appointmentid},'patientRejectCall','${#TestCase#date3}',0);

INSERT INTO f_notification_telemedicine
(id,notification_id,appointment_id,event_type,event_date_time,unsuccess_call_counter)
VALUES (${#TestCase#fnt_id4},${#TestCase#fnt_n_id},${#TestCase#Appointmentid},'doctorStartCall','${#TestCase#date4}',0);

INSERT INTO f_notification_telemedicine
(id,notification_id,appointment_id,event_type,event_date_time,unsuccess_call_counter)
VALUES (${#TestCase#fnt_id5},${#TestCase#fnt_n_id},${#TestCase#Appointmentid},'patientDidNotAnswer','${#TestCase#date5}',0)</con:query><con:assertion type="JDBC Status" id="4ee8cc39-f00f-408a-805a-a5e6c3a66b35" name="JDBC Status"/><con:assertion type="Simple Contains" id="b7e7d993-3467-4076-9606-f61a454d7f77" name="Contains"><con:configuration><token>&lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="status/tmk" id="58cfb012-37a0-4ef3-bc69-6209c4e64bfe"><con:settings/><con:config service="http://notification-emiasinfo1.dev-emias.emias.ru" resourcePath="/api/v1/status/tmk" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="status/tmk" id="d0966023-0c73-4203-a595-1e05ed092d35" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://notification-emiasinfo1.dev-emias.emias.ru</con:endpoint><con:request/><con:originalUri>http://notification-emiasinfo1.dev-emias.emias.ru/api/v1/status/tmk</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="cde5fc8f-829f-4fc5-860d-866246da3b29" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d3b4141d-c022-4b3e-aeb5-fe366ea4bff9" name="Script Assertion"><con:configuration><scriptText>// Парсим ответ в объект JsonSlurper
def response = new groovy.json.JsonSlurper().parseText(messageExchange.responseContent)

// Проверяем значение поля appointmentId
assert response.tmkStatusList[0].appointmentId.toString() ==context.expand('${#TestCase#Appointmentid}')

// Проверяем значение поля eventType
assert response.tmkStatusList[0].eventType =='patientDidNotAnswer'

// Проверяем значение поля eventDateTime
assert response.tmkStatusList[0].eventDateTime =="2025-01-05T15:14:38.555"

// Проверяем значение поля description
assert response.tmkStatusList[0].description =="Врач звонил 0 раз(а), последний в 15:14:38 05.01.2025"

// Проверяем значение поля type
assert response.tmkStatusList[0].type =="attention"
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="patientId" value="${#TestCase#patientId1}"/>
  <con:entry key="deviceGuid" value="${#TestCase#device_guid1}"/>
  <con:entry key="appointmentId" value="${#TestCase#Appointmentid}"/>
</con:parameters><con:parameterOrder><con:entry>patientId</con:entry><con:entry>deviceGuid</con:entry><con:entry>appointmentId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="jdbc" name="Удаление данных из БД" id="e234094f-a7d2-4a20-8093-c91117a5ee2d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>${#Project#emiasInfoNotificationDBDriver}</con:driver><con:connectionString>${#Project#emiasInfoNotification_Full_DB_Connection}</con:connectionString><con:query>Delete from f_user_device
Where device_guid='${#TestCase#device_guid1}' AND id=${#TestCase#deviceId1};

Delete from f_device
Where device_guid='${#TestCase#device_guid1}';

Delete from f_user
Where oms_number='${#TestCase#oms1}';

Delete from f_notification_telemedicine
Where notification_id='${#TestCase#fnt_n_id}' AND appointment_id=${#TestCase#Appointmentid};
</con:query><con:assertion type="JDBC Status" id="e068f605-ff0e-4b45-b465-e3e0223fab81" name="JDBC Status"/><con:assertion type="Simple Contains" id="42df36aa-178a-4bf8-b705-14261631c7cd" name="Contains"><con:configuration><token> &lt;UpdateCount>1&lt;/UpdateCount></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>userid1</con:name><con:value>17780</con:value></con:property><con:property><con:name>oms1</con:name><con:value>4464</con:value></con:property><con:property><con:name>patientId1</con:name><con:value>300000173535561</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1940-11-24</con:value></con:property><con:property><con:name>userid2</con:name><con:value>17781</con:value></con:property><con:property><con:name>oms2</con:name><con:value>4465</con:value></con:property><con:property><con:name>birthDate2</con:name><con:value>1941-11-24</con:value></con:property><con:property><con:name>patientid2</con:name><con:value>300000173535562</con:value></con:property><con:property><con:name>deviceId1</con:name><con:value>251679</con:value></con:property><con:property><con:name>device_guid1</con:name><con:value>0fc98479-86b1-439a-a8a3-21c097bf6193</con:value></con:property><con:property><con:name>device_cloud_id</con:name><con:value>clID</con:value></con:property><con:property><con:name>Appointmentid</con:name><con:value>664972065654</con:value></con:property><con:property><con:name>fnt_n_id</con:name><con:value>419227</con:value></con:property><con:property><con:name>date1</con:name><con:value>2025-01-1T15:14:38.555Z</con:value></con:property><con:property><con:name>date2</con:name><con:value>2025-01-2T15:14:38.555Z</con:value></con:property><con:property><con:name>date3</con:name><con:value>2025-01-3T15:14:38.555Z</con:value></con:property><con:property><con:name>date4</con:name><con:value>2025-01-4T15:14:38.555Z</con:value></con:property><con:property><con:name>date5</con:name><con:value>2025-01-5T15:14:38.555Z</con:value></con:property><con:property><con:name>fnt_id1</con:name><con:value>1330</con:value></con:property><con:property><con:name>fnt_id2</con:name><con:value>1331</con:value></con:property><con:property><con:name>fnt_id3</con:name><con:value>1332</con:value></con:property><con:property><con:name>fnt_id4</con:name><con:value>1333</con:value></con:property><con:property><con:name>fnt_id5</con:name><con:value>1334</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="f5a65173-8ab4-4578-853c-76ccdda0bd10" name="Сохранить токены из глобалных свойств в свойства проекта"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0708b861-898c-441f-8c43-442396f75505" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Сохранить токены в свойства проекта" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Сохранить" id="b04560a2-e9a5-4040-bbbb-a2f69f7ec58c"><con:settings/><con:config><script>def sudirToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "sudirToken" )
def accessToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "X-Access-JWT" )
def refreshToken =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "refreshToken" )
def refreshAccess =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "refresh-X-Access-JWT" )
def base64 =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "base64" )
def guid =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "guid" )
def clientId =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "clientId" )
def clientSecret =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "clientSecret" )
def login =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "login" )
def password =com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "password" )

testRunner.testCase.testSuite.project.setPropertyValue("sudirToken", sudirToken)
testRunner.testCase.testSuite.project.setPropertyValue("X-Access-JWT", accessToken)
testRunner.testCase.testSuite.project.setPropertyValue("refreshToken", refreshToken)
testRunner.testCase.testSuite.project.setPropertyValue("refresh-X-Access-JWT", refreshAccess)
testRunner.testCase.testSuite.project.setPropertyValue("base64", base64)
testRunner.testCase.testSuite.project.setPropertyValue("guid", guid)
testRunner.testCase.testSuite.project.setPropertyValue("clientId", clientId)
testRunner.testCase.testSuite.project.setPropertyValue("clientSecret", clientSecret)
testRunner.testCase.testSuite.project.setPropertyValue("login", login)
testRunner.testCase.testSuite.project.setPropertyValue("password", password)</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>sudirToken</con:name><con:value>T9ENrBwin1UM40TP952ga-VgK88dvpW6sZWBr6cVQS4</con:value></con:property><con:property><con:name>X-Access-JWT</con:name><con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ1c2VyX2F1dGgiLCJleHAiOjE3Mzg3NjYyMzMsImF1ZCI6IlBBVElFTlQiLCJzdWIiOiJjMzdlYWU5ZC1hOTJhLTRmOTMtODlhYy05MjI4NjU3MjM2YWEiLCJzaWQiOiIxNTQ0YjJjMi1iMGE3LTQ5MGUtOTg0NC0wNjYxYzg5YjE0OWIiLCJwaG9uZSI6Ijc5MjY1MjA5MjA3Iiwic3NvX2lkIjoieXlxSEdoaVVrbVFSL3V1UGlnajhYNTVpbzljbkhyRTJyVjJ2bDBpdmJRVnFkYkJlSXVrd2tGKzZjQkJVa0RWa2ZPL2oyQ0tFbFFUZXN3d1JTZHlpTEx4U2R1TkozSHM2MVFSQ2FWNlVCQ1NGUUVUMXZDVUQ2V2oybFdsYmo2aHIxWXhuTU5EN29FaVRaUTRjTS95dkJuK0QxM0J3UFB4TkpJSnhtWHRKTDB5RFl4TFJwcmJYbXlnaWlxMWZuckMyYUFPT1BqNkZTWEp4ZWFBT1dCMDMyNjdWOTZ4VEs1ZklFTkhhU0RTQjBFQzVJM3lWczVjZFQ1dnFqRGZjTnVoTkIzLzV3K1gwekF2ZnV2ZlZWeW1nRU0yVXJFOFVmOFBDMUh3MjdQa0J4WHE4SENRRkp5YXNvVElqRDdiN01mL0FjK1c5N29CWks2N0dJUGl5d0J5V2RRPT0iLCJlbWFpbCI6ImphbWVzaGViZXJ0QGV4YW1wbGUubmV0IiwiZmlyc3RfbmFtZSI6Ilx1MDQxZVx1MDQzYlx1MDQ0Y1x1MDQzM1x1MDQzMCIsInNlY29uZF9uYW1lIjoiXHUwNDFhLiIsIm1pZGRsZV9uYW1lIjoiXHUwNDE1XHUwNDMyXHUwNDMzXHUwNDM1XHUwNDNkXHUwNDRjXHUwNDM1XHUwNDMyXHUwNDNkXHUwNDMwIiwiYmlydGhfZGF0ZSI6IjIwMTgtMDctMTIiLCJhbXIiOltdfQ.ATGm7a8Rf45BNyzETyXKGdJ9WKfJsn4pHnCfsV7l9lo2haZhIskCdEiqnEqsOA2KX7cnwaUbXGnaggWYjWKewpQb5WAgFcVRvTPOJBVWMnYJC2OjxVvnQgTFuNEb4EdZeG_39sVQK2UP9-JViBJHtpfj9q_2ovIie0iaNn7Gv2j2ox0DZFbDv0hRvyEb9kpHqOgAuRBzYArtnSqpm-6Npo6VvMNmkyEWB1KQ5CDTgLLqMLzV1onpb7b_PN-YFyrSh3VvS6xxhj1vZrEtujisS6HIRe6exE57QyeV7JOYHUMHwXKhSS6t-hdd0IOYcoAVT0Kluzle2ghKLCZA0pm4quBIrirl-fWfflkue77kje8WrUgJRgEyUZB36lvTQveWv7M_4yF64iOxGjnLf-wzkeNH1SBhkptTTvTDIO7T3hwcEGjGh7VGUOEChIt8_6I72ug7bXFZK95JLGbfVFMRPWASmgX-ldNwlxpz6MUeqd6d8t8xrwgLRPFJ2VrarsLdNhu1tJfIsHXeDdTHmV2XQw_57U9DvbtlevbScVMTgSwYx4OWTRdshqhIWaU6p7g3zWmpYadEtVEIWaZlFv-uoUZDVjtoTREs-T2JojOnP2N4Xo7G-EE6ZWq2wH_dZXwt_XRDM0SmlljMGOTPu5rOKlCMxRnB2Ey-4iQWbrhn3mY</con:value></con:property><con:property><con:name>refreshToken</con:name><con:value>nFXa96RcUhn5lFz-2ZO2o0i6gIwCSSMJd2CV6GpguEhVGUMAWmp49wRh12TmPMMdFpmS-U137FCJSKt9c5io5Q</con:value></con:property><con:property><con:name>refresh-X-Access-JWT</con:name><con:value>eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ1c2VyX2F1dGgiLCJyaWQiOiI2ZDJiM2FiOC01MjJhLTRkMmEtYWU2Yy0xMTkxZTQxNzU1NDciLCJzaWQiOiIxNTQ0YjJjMi1iMGE3LTQ5MGUtOTg0NC0wNjYxYzg5YjE0OWIiLCJleHAiOjE3MzkzNjc0MzMsInN1YiI6ImMzN2VhZTlkLWE5MmEtNGY5My04OWFjLTkyMjg2NTcyMzZhYSIsInNzb19pZCI6ImNLMCt3ZmhxbU5NS2hNM3NzVXlZcHFMWlBXN3VDWklsUEs4UTVmMzkxR0pkQ2FPTmgyMHBlbHU0V2c4M2xHYUVQQktWVHBtRWh3eFZxamd5RjZVUm0rbi9COHJWRXVHZlVScWdhYXh6VjVYaGQrNFdrZ3Ftc1JnWGFIZGFCVFEweUgxcUJmaE9hUDZqY3VxKzR2K0I1QXdpMVd5cHdrYmg0YW9WNVYyOFZINy9lUVlucm5rYjltQzJ0YlFnQ3VtQ1hYNkFBbWo3VnI4NFdvZ3ZOQVU3SnFNWWdzcVJPTEZHby9yU0NPbXBoSDAwb1gxS0lWbklNWWtuMjNOcEIyRlVPSmFzSTJvZDhhU0dBNU85TDBDOTZ1Qjh3Rys1ZFZhSG0zekRUZ0lGcGlyakNkSXE0RFdodWZPTXFTTlFKUVlmRkc4Y0I5S3FpZEVXNmo4blhsQU9tZz09In0.uqK_Y_rX2pd4hsxxaPgQ-_sYyL__5xdbuR1K8mySn56SV_Z4gHHV-xRgrSV67E8dXiNaLZUJnpMekpIXnsdwyvuw5lgvcvTJiAe70DGm59tL3KDXKKsm24y2NpkCEhDi7gnemxS4mBLuAyAe8pIthpLQhexS5JiEOdv8GJbQjia94kb-dXOd849LKeGd2Si1zYqoNQBRDuajVEaxzJFZkajDeG6IPH9Lznr1IGwHiwzzQV2u0IXCrGY7u-4LYczkV6yfPARNKWtGNUpEbDX7rkwhCZpWzwO_ha8XyYJk2PFleBFboduRPfP2RyQluweOHtLnjX6d1YYRyMD31D79gAm7Yf75qKVewCogIlDQRpUgYEUb16MO2eM5JvVCeRJbBZeKdtdAqoCNUHGwZEfYZOzKzSjoAmkL2ez0yEETYlAYivbvnBZ5qXL0FALZMJ4bZ___YnzuJI1d2ADngbNF5pUkKNBsgNaA0u5EM7IPdObUthasfzYW5SwlvwKscEPW4rym9heeSyuqY6BSerQnB7mK6hP4whYRpKnSRn2IMDUUbVtaC7C7-E55YX4wLL8CKbcTmaLMdGX2351XmRNwm6FCV6V0qxADyQvPu7pocTDagl5_nJPOIfK2h1_u3iRkpyzkrY7ml1WbLzpRPTlCko-VSe6lUiAHb0Y69krbSqA</con:value></con:property><con:property><con:name>base64</con:name><con:value>ZHlufmVtaWFzLmluZm9+MGM0ZjQ4ZTctNGNlNi00NDRiLTljYzItYjFhMGI4YjY3MTg5OnNwUjR5MEdvVURzdjFnMg==</con:value></con:property><con:property><con:name>guid</con:name><con:value>af3e4ac5-96dd-4167-afb3-244eb7187aba</con:value></con:property><con:property><con:name>clientId</con:name><con:value>dyn~emias.info~0c4f48e7-4ce6-444b-9cc2-b1a0b8b67189</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>spR4y0GoUDsv1g2</con:value></con:property><con:property><con:name>login</con:name><con:value>med_test_2022@bk.ru</con:value></con:property><con:property><con:name>password</con:name><con:value>OOYY2t2hooy#3</con:value></con:property><con:property><con:name>emiasInfoAPPDbLogin_dev1</con:name><con:value>postgres</con:value></con:property><con:property><con:name>emiasInfoAPPDbPassword_dev1</con:name><con:value>postgres</con:value></con:property><con:property><con:name>emiasInfoAPPDbConnection_dev1</con:name><con:value>10.3.164.51:30100/postgres</con:value></con:property><con:property><con:name>emiasInfoAPPDBDriver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>emiasInfoAPP_Full_DB_Connection</con:name><con:value>jdbc:postgresql://10.3.164.51:30100/postgres?user=postgres&amp;password=postgres</con:value></con:property><con:property><con:name>mock</con:name><con:value>http://application-mock.dev-emias.emias.ru</con:value></con:property><con:property><con:name>EndPoint_dev2</con:name><con:value>http://application-eim-emiasinfo2.dev-emias.emias.ru</con:value></con:property><con:property><con:name>EndPoint_dev1</con:name><con:value>http://application-emiasinfo1.dev-emias.emias.ru</con:value></con:property><con:property><con:name>emiasInfoAPPDbLogin_TEST</con:name><con:value>emiasinfo_application</con:value></con:property><con:property><con:name>emiasInfoAPPDbPassword_TEST</con:name><con:value>emiasinfo_application</con:value></con:property><con:property><con:name>emiasInfoAPPDbConnection_TEST</con:name></con:property><con:property><con:name>emiasInfoAPPDbLogin_mock</con:name><con:value>postgres</con:value></con:property><con:property><con:name>emiasInfoAPPDbPassword_mock</con:name><con:value>postgres</con:value></con:property><con:property><con:name>emiasInfoAPP_Full_DB_Connection_mock</con:name><con:value>jdbc:postgresql://10.3.164.51:30104/postgres?user=postgres&amp;password=postgres</con:value></con:property><con:property><con:name>emiasInfoNotificationDbLogin_dev1</con:name><con:value>postgres</con:value></con:property><con:property><con:name>emiasInfoNotificationDbPassword_dev1</con:name><con:value>postgres</con:value></con:property><con:property><con:name>emiasInfoNotificationDbConnection_dev1</con:name><con:value>10.3.164.51:30101/postgres</con:value></con:property><con:property><con:name>emiasInfoNotification_Full_DB_Connection</con:name><con:value>jdbc:postgresql://10.3.164.51:30101/postgres?user=postgres&amp;password=postgres</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>